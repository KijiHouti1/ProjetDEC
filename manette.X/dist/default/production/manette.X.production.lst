

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Apr 13 09:55:50 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1508
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 1.41
    18                           ; Generated 25/01/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F1508 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  008C                     	;# 
    79  008D                     	;# 
    80  008E                     	;# 
    81  0091                     	;# 
    82  0092                     	;# 
    83  0093                     	;# 
    84  0095                     	;# 
    85  0096                     	;# 
    86  0097                     	;# 
    87  0099                     	;# 
    88  009A                     	;# 
    89  009B                     	;# 
    90  009B                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009E                     	;# 
    94  009F                     	;# 
    95  010C                     	;# 
    96  010D                     	;# 
    97  010E                     	;# 
    98  0111                     	;# 
    99  0112                     	;# 
   100  0113                     	;# 
   101  0114                     	;# 
   102  0115                     	;# 
   103  0116                     	;# 
   104  0117                     	;# 
   105  0118                     	;# 
   106  0119                     	;# 
   107  011D                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  018E                     	;# 
   111  0191                     	;# 
   112  0191                     	;# 
   113  0192                     	;# 
   114  0193                     	;# 
   115  0193                     	;# 
   116  0194                     	;# 
   117  0195                     	;# 
   118  0196                     	;# 
   119  0197                     	;# 
   120  0199                     	;# 
   121  019A                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019C                     	;# 
   125  019D                     	;# 
   126  019E                     	;# 
   127  019F                     	;# 
   128  020C                     	;# 
   129  020D                     	;# 
   130  0211                     	;# 
   131  0211                     	;# 
   132  0212                     	;# 
   133  0212                     	;# 
   134  0213                     	;# 
   135  0213                     	;# 
   136  0214                     	;# 
   137  0214                     	;# 
   138  0215                     	;# 
   139  0215                     	;# 
   140  0215                     	;# 
   141  0216                     	;# 
   142  0216                     	;# 
   143  0217                     	;# 
   144  0217                     	;# 
   145  0391                     	;# 
   146  0392                     	;# 
   147  0393                     	;# 
   148  0394                     	;# 
   149  0395                     	;# 
   150  0396                     	;# 
   151  0498                     	;# 
   152  0498                     	;# 
   153  0499                     	;# 
   154  049A                     	;# 
   155  049B                     	;# 
   156  049B                     	;# 
   157  049C                     	;# 
   158  049D                     	;# 
   159  049E                     	;# 
   160  049F                     	;# 
   161  0611                     	;# 
   162  0612                     	;# 
   163  0613                     	;# 
   164  0613                     	;# 
   165  0614                     	;# 
   166  0615                     	;# 
   167  0616                     	;# 
   168  0616                     	;# 
   169  0617                     	;# 
   170  0618                     	;# 
   171  0619                     	;# 
   172  0619                     	;# 
   173  061A                     	;# 
   174  061B                     	;# 
   175  061C                     	;# 
   176  061C                     	;# 
   177  0691                     	;# 
   178  0692                     	;# 
   179  0693                     	;# 
   180  0694                     	;# 
   181  0695                     	;# 
   182  0F0F                     	;# 
   183  0F10                     	;# 
   184  0F11                     	;# 
   185  0F12                     	;# 
   186  0F13                     	;# 
   187  0F14                     	;# 
   188  0F15                     	;# 
   189  0F16                     	;# 
   190  0F17                     	;# 
   191  0F18                     	;# 
   192  0F19                     	;# 
   193  0F1A                     	;# 
   194  0F1B                     	;# 
   195  0F1C                     	;# 
   196  0F1D                     	;# 
   197  0F1E                     	;# 
   198  0F1F                     	;# 
   199  0F20                     	;# 
   200  0F21                     	;# 
   201  0F22                     	;# 
   202  0F23                     	;# 
   203  0F24                     	;# 
   204  0F25                     	;# 
   205  0F26                     	;# 
   206  0F27                     	;# 
   207  0F28                     	;# 
   208  0F29                     	;# 
   209  0F2A                     	;# 
   210  0F2B                     	;# 
   211  0F2C                     	;# 
   212  0F2D                     	;# 
   213  0F2E                     	;# 
   214  0F2F                     	;# 
   215  0F8C                     	;# 
   216  0F8D                     	;# 
   217  0F91                     	;# 
   218  0F95                     	;# 
   219  0F96                     	;# 
   220  0F97                     	;# 
   221  0F9C                     	;# 
   222  0F9D                     	;# 
   223  0F9E                     	;# 
   224  0FE3                     	;# 
   225  0FE4                     	;# 
   226  0FE5                     	;# 
   227  0FE6                     	;# 
   228  0FE7                     	;# 
   229  0FE8                     	;# 
   230  0FE9                     	;# 
   231  0FEA                     	;# 
   232  0FEB                     	;# 
   233  0FED                     	;# 
   234  0FEE                     	;# 
   235  0FEF                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  000E                     	;# 
   251  0011                     	;# 
   252  0012                     	;# 
   253  0013                     	;# 
   254  0015                     	;# 
   255  0016                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001C                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  0111                     	;# 
   284  0112                     	;# 
   285  0113                     	;# 
   286  0114                     	;# 
   287  0115                     	;# 
   288  0116                     	;# 
   289  0117                     	;# 
   290  0118                     	;# 
   291  0119                     	;# 
   292  011D                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  018E                     	;# 
   296  0191                     	;# 
   297  0191                     	;# 
   298  0192                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0194                     	;# 
   302  0195                     	;# 
   303  0196                     	;# 
   304  0197                     	;# 
   305  0199                     	;# 
   306  019A                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019C                     	;# 
   310  019D                     	;# 
   311  019E                     	;# 
   312  019F                     	;# 
   313  020C                     	;# 
   314  020D                     	;# 
   315  0211                     	;# 
   316  0211                     	;# 
   317  0212                     	;# 
   318  0212                     	;# 
   319  0213                     	;# 
   320  0213                     	;# 
   321  0214                     	;# 
   322  0214                     	;# 
   323  0215                     	;# 
   324  0215                     	;# 
   325  0215                     	;# 
   326  0216                     	;# 
   327  0216                     	;# 
   328  0217                     	;# 
   329  0217                     	;# 
   330  0391                     	;# 
   331  0392                     	;# 
   332  0393                     	;# 
   333  0394                     	;# 
   334  0395                     	;# 
   335  0396                     	;# 
   336  0498                     	;# 
   337  0498                     	;# 
   338  0499                     	;# 
   339  049A                     	;# 
   340  049B                     	;# 
   341  049B                     	;# 
   342  049C                     	;# 
   343  049D                     	;# 
   344  049E                     	;# 
   345  049F                     	;# 
   346  0611                     	;# 
   347  0612                     	;# 
   348  0613                     	;# 
   349  0613                     	;# 
   350  0614                     	;# 
   351  0615                     	;# 
   352  0616                     	;# 
   353  0616                     	;# 
   354  0617                     	;# 
   355  0618                     	;# 
   356  0619                     	;# 
   357  0619                     	;# 
   358  061A                     	;# 
   359  061B                     	;# 
   360  061C                     	;# 
   361  061C                     	;# 
   362  0691                     	;# 
   363  0692                     	;# 
   364  0693                     	;# 
   365  0694                     	;# 
   366  0695                     	;# 
   367  0F0F                     	;# 
   368  0F10                     	;# 
   369  0F11                     	;# 
   370  0F12                     	;# 
   371  0F13                     	;# 
   372  0F14                     	;# 
   373  0F15                     	;# 
   374  0F16                     	;# 
   375  0F17                     	;# 
   376  0F18                     	;# 
   377  0F19                     	;# 
   378  0F1A                     	;# 
   379  0F1B                     	;# 
   380  0F1C                     	;# 
   381  0F1D                     	;# 
   382  0F1E                     	;# 
   383  0F1F                     	;# 
   384  0F20                     	;# 
   385  0F21                     	;# 
   386  0F22                     	;# 
   387  0F23                     	;# 
   388  0F24                     	;# 
   389  0F25                     	;# 
   390  0F26                     	;# 
   391  0F27                     	;# 
   392  0F28                     	;# 
   393  0F29                     	;# 
   394  0F2A                     	;# 
   395  0F2B                     	;# 
   396  0F2C                     	;# 
   397  0F2D                     	;# 
   398  0F2E                     	;# 
   399  0F2F                     	;# 
   400  0F8C                     	;# 
   401  0F8D                     	;# 
   402  0F91                     	;# 
   403  0F95                     	;# 
   404  0F96                     	;# 
   405  0F97                     	;# 
   406  0F9C                     	;# 
   407  0F9D                     	;# 
   408  0F9E                     	;# 
   409  0FE3                     	;# 
   410  0FE4                     	;# 
   411  0FE5                     	;# 
   412  0FE6                     	;# 
   413  0FE7                     	;# 
   414  0FE8                     	;# 
   415  0FE9                     	;# 
   416  0FEA                     	;# 
   417  0FEB                     	;# 
   418  0FED                     	;# 
   419  0FEE                     	;# 
   420  0FEF                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0008                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000D                     	;# 
   435  000E                     	;# 
   436  0011                     	;# 
   437  0012                     	;# 
   438  0013                     	;# 
   439  0015                     	;# 
   440  0016                     	;# 
   441  0016                     	;# 
   442  0017                     	;# 
   443  0018                     	;# 
   444  0019                     	;# 
   445  001A                     	;# 
   446  001B                     	;# 
   447  001C                     	;# 
   448  008C                     	;# 
   449  008D                     	;# 
   450  008E                     	;# 
   451  0091                     	;# 
   452  0092                     	;# 
   453  0093                     	;# 
   454  0095                     	;# 
   455  0096                     	;# 
   456  0097                     	;# 
   457  0099                     	;# 
   458  009A                     	;# 
   459  009B                     	;# 
   460  009B                     	;# 
   461  009C                     	;# 
   462  009D                     	;# 
   463  009E                     	;# 
   464  009F                     	;# 
   465  010C                     	;# 
   466  010D                     	;# 
   467  010E                     	;# 
   468  0111                     	;# 
   469  0112                     	;# 
   470  0113                     	;# 
   471  0114                     	;# 
   472  0115                     	;# 
   473  0116                     	;# 
   474  0117                     	;# 
   475  0118                     	;# 
   476  0119                     	;# 
   477  011D                     	;# 
   478  018C                     	;# 
   479  018D                     	;# 
   480  018E                     	;# 
   481  0191                     	;# 
   482  0191                     	;# 
   483  0192                     	;# 
   484  0193                     	;# 
   485  0193                     	;# 
   486  0194                     	;# 
   487  0195                     	;# 
   488  0196                     	;# 
   489  0197                     	;# 
   490  0199                     	;# 
   491  019A                     	;# 
   492  019B                     	;# 
   493  019B                     	;# 
   494  019C                     	;# 
   495  019D                     	;# 
   496  019E                     	;# 
   497  019F                     	;# 
   498  020C                     	;# 
   499  020D                     	;# 
   500  0211                     	;# 
   501  0211                     	;# 
   502  0212                     	;# 
   503  0212                     	;# 
   504  0213                     	;# 
   505  0213                     	;# 
   506  0214                     	;# 
   507  0214                     	;# 
   508  0215                     	;# 
   509  0215                     	;# 
   510  0215                     	;# 
   511  0216                     	;# 
   512  0216                     	;# 
   513  0217                     	;# 
   514  0217                     	;# 
   515  0391                     	;# 
   516  0392                     	;# 
   517  0393                     	;# 
   518  0394                     	;# 
   519  0395                     	;# 
   520  0396                     	;# 
   521  0498                     	;# 
   522  0498                     	;# 
   523  0499                     	;# 
   524  049A                     	;# 
   525  049B                     	;# 
   526  049B                     	;# 
   527  049C                     	;# 
   528  049D                     	;# 
   529  049E                     	;# 
   530  049F                     	;# 
   531  0611                     	;# 
   532  0612                     	;# 
   533  0613                     	;# 
   534  0613                     	;# 
   535  0614                     	;# 
   536  0615                     	;# 
   537  0616                     	;# 
   538  0616                     	;# 
   539  0617                     	;# 
   540  0618                     	;# 
   541  0619                     	;# 
   542  0619                     	;# 
   543  061A                     	;# 
   544  061B                     	;# 
   545  061C                     	;# 
   546  061C                     	;# 
   547  0691                     	;# 
   548  0692                     	;# 
   549  0693                     	;# 
   550  0694                     	;# 
   551  0695                     	;# 
   552  0F0F                     	;# 
   553  0F10                     	;# 
   554  0F11                     	;# 
   555  0F12                     	;# 
   556  0F13                     	;# 
   557  0F14                     	;# 
   558  0F15                     	;# 
   559  0F16                     	;# 
   560  0F17                     	;# 
   561  0F18                     	;# 
   562  0F19                     	;# 
   563  0F1A                     	;# 
   564  0F1B                     	;# 
   565  0F1C                     	;# 
   566  0F1D                     	;# 
   567  0F1E                     	;# 
   568  0F1F                     	;# 
   569  0F20                     	;# 
   570  0F21                     	;# 
   571  0F22                     	;# 
   572  0F23                     	;# 
   573  0F24                     	;# 
   574  0F25                     	;# 
   575  0F26                     	;# 
   576  0F27                     	;# 
   577  0F28                     	;# 
   578  0F29                     	;# 
   579  0F2A                     	;# 
   580  0F2B                     	;# 
   581  0F2C                     	;# 
   582  0F2D                     	;# 
   583  0F2E                     	;# 
   584  0F2F                     	;# 
   585  0F8C                     	;# 
   586  0F8D                     	;# 
   587  0F91                     	;# 
   588  0F95                     	;# 
   589  0F96                     	;# 
   590  0F97                     	;# 
   591  0F9C                     	;# 
   592  0F9D                     	;# 
   593  0F9E                     	;# 
   594  0FE3                     	;# 
   595  0FE4                     	;# 
   596  0FE5                     	;# 
   597  0FE6                     	;# 
   598  0FE7                     	;# 
   599  0FE8                     	;# 
   600  0FE9                     	;# 
   601  0FEA                     	;# 
   602  0FEB                     	;# 
   603  0FED                     	;# 
   604  0FEE                     	;# 
   605  0FEF                     	;# 
   606  0000                     	;# 
   607  0001                     	;# 
   608  0002                     	;# 
   609  0003                     	;# 
   610  0004                     	;# 
   611  0005                     	;# 
   612  0006                     	;# 
   613  0007                     	;# 
   614  0008                     	;# 
   615  0009                     	;# 
   616  000A                     	;# 
   617  000B                     	;# 
   618  000C                     	;# 
   619  000D                     	;# 
   620  000E                     	;# 
   621  0011                     	;# 
   622  0012                     	;# 
   623  0013                     	;# 
   624  0015                     	;# 
   625  0016                     	;# 
   626  0016                     	;# 
   627  0017                     	;# 
   628  0018                     	;# 
   629  0019                     	;# 
   630  001A                     	;# 
   631  001B                     	;# 
   632  001C                     	;# 
   633  008C                     	;# 
   634  008D                     	;# 
   635  008E                     	;# 
   636  0091                     	;# 
   637  0092                     	;# 
   638  0093                     	;# 
   639  0095                     	;# 
   640  0096                     	;# 
   641  0097                     	;# 
   642  0099                     	;# 
   643  009A                     	;# 
   644  009B                     	;# 
   645  009B                     	;# 
   646  009C                     	;# 
   647  009D                     	;# 
   648  009E                     	;# 
   649  009F                     	;# 
   650  010C                     	;# 
   651  010D                     	;# 
   652  010E                     	;# 
   653  0111                     	;# 
   654  0112                     	;# 
   655  0113                     	;# 
   656  0114                     	;# 
   657  0115                     	;# 
   658  0116                     	;# 
   659  0117                     	;# 
   660  0118                     	;# 
   661  0119                     	;# 
   662  011D                     	;# 
   663  018C                     	;# 
   664  018D                     	;# 
   665  018E                     	;# 
   666  0191                     	;# 
   667  0191                     	;# 
   668  0192                     	;# 
   669  0193                     	;# 
   670  0193                     	;# 
   671  0194                     	;# 
   672  0195                     	;# 
   673  0196                     	;# 
   674  0197                     	;# 
   675  0199                     	;# 
   676  019A                     	;# 
   677  019B                     	;# 
   678  019B                     	;# 
   679  019C                     	;# 
   680  019D                     	;# 
   681  019E                     	;# 
   682  019F                     	;# 
   683  020C                     	;# 
   684  020D                     	;# 
   685  0211                     	;# 
   686  0211                     	;# 
   687  0212                     	;# 
   688  0212                     	;# 
   689  0213                     	;# 
   690  0213                     	;# 
   691  0214                     	;# 
   692  0214                     	;# 
   693  0215                     	;# 
   694  0215                     	;# 
   695  0215                     	;# 
   696  0216                     	;# 
   697  0216                     	;# 
   698  0217                     	;# 
   699  0217                     	;# 
   700  0391                     	;# 
   701  0392                     	;# 
   702  0393                     	;# 
   703  0394                     	;# 
   704  0395                     	;# 
   705  0396                     	;# 
   706  0498                     	;# 
   707  0498                     	;# 
   708  0499                     	;# 
   709  049A                     	;# 
   710  049B                     	;# 
   711  049B                     	;# 
   712  049C                     	;# 
   713  049D                     	;# 
   714  049E                     	;# 
   715  049F                     	;# 
   716  0611                     	;# 
   717  0612                     	;# 
   718  0613                     	;# 
   719  0613                     	;# 
   720  0614                     	;# 
   721  0615                     	;# 
   722  0616                     	;# 
   723  0616                     	;# 
   724  0617                     	;# 
   725  0618                     	;# 
   726  0619                     	;# 
   727  0619                     	;# 
   728  061A                     	;# 
   729  061B                     	;# 
   730  061C                     	;# 
   731  061C                     	;# 
   732  0691                     	;# 
   733  0692                     	;# 
   734  0693                     	;# 
   735  0694                     	;# 
   736  0695                     	;# 
   737  0F0F                     	;# 
   738  0F10                     	;# 
   739  0F11                     	;# 
   740  0F12                     	;# 
   741  0F13                     	;# 
   742  0F14                     	;# 
   743  0F15                     	;# 
   744  0F16                     	;# 
   745  0F17                     	;# 
   746  0F18                     	;# 
   747  0F19                     	;# 
   748  0F1A                     	;# 
   749  0F1B                     	;# 
   750  0F1C                     	;# 
   751  0F1D                     	;# 
   752  0F1E                     	;# 
   753  0F1F                     	;# 
   754  0F20                     	;# 
   755  0F21                     	;# 
   756  0F22                     	;# 
   757  0F23                     	;# 
   758  0F24                     	;# 
   759  0F25                     	;# 
   760  0F26                     	;# 
   761  0F27                     	;# 
   762  0F28                     	;# 
   763  0F29                     	;# 
   764  0F2A                     	;# 
   765  0F2B                     	;# 
   766  0F2C                     	;# 
   767  0F2D                     	;# 
   768  0F2E                     	;# 
   769  0F2F                     	;# 
   770  0F8C                     	;# 
   771  0F8D                     	;# 
   772  0F91                     	;# 
   773  0F95                     	;# 
   774  0F96                     	;# 
   775  0F97                     	;# 
   776  0F9C                     	;# 
   777  0F9D                     	;# 
   778  0F9E                     	;# 
   779  0FE3                     	;# 
   780  0FE4                     	;# 
   781  0FE5                     	;# 
   782  0FE6                     	;# 
   783  0FE7                     	;# 
   784  0FE8                     	;# 
   785  0FE9                     	;# 
   786  0FEA                     	;# 
   787  0FEB                     	;# 
   788  0FED                     	;# 
   789  0FEE                     	;# 
   790  0FEF                     	;# 
   791  000E                     _PORTCbits	set	14
   792  000D                     _PORTBbits	set	13
   793  000C                     _PORTAbits	set	12
   794  0011                     _PIR1bits	set	17
   795  0095                     _OPTION_REGbits	set	149
   796  008E                     _TRISC	set	142
   797  008D                     _TRISB	set	141
   798  008C                     _TRISA	set	140
   799  0097                     _WDTCON	set	151
   800  0099                     _OSCCON	set	153
   801  010E                     _LATCbits	set	270
   802  011D                     _APFCON	set	285
   803  010E                     _LATC	set	270
   804  010D                     _LATB	set	269
   805  010C                     _LATA	set	268
   806  018C                     _ANSELA	set	396
   807  018D                     _ANSELB	set	397
   808  018E                     _ANSELC	set	398
   809  019A                     _TXREG	set	410
   810  0199                     _RCREG	set	409
   811  019D                     _RCSTAbits	set	413
   812  019C                     _SPBRGH	set	412
   813  019B                     _SPBRGL	set	411
   814  019E                     _TXSTA	set	414
   815  019D                     _RCSTA	set	413
   816  019F                     _BAUDCON	set	415
   817  020C                     _WPUA	set	524
   818  020D                     _WPUB	set	525
   819                           
   820                           ; #config settings
   821  0000                     
   822                           	psect	cinit
   823  07FD                     start_initialization:	
   824  07FD                     __initialization:	
   825  07FD                     end_of_initialization:	
   826                           ;End of C runtime variable initialization code
   827                           
   828  07FD                     __end_of__initialization:	
   829  07FD  0020               	movlb	0
   830  07FE  3186  2ED2         	ljmp	_main	;jump to C main() function
   831                           
   832                           	psect	cstackCOMMON
   833  0070                     __pcstackCOMMON:	
   834  0070                     ?_PIN_MANAGER_Initialize:	
   835  0070                     ??_PIN_MANAGER_Initialize:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  0070                     ?_OSCILLATOR_Initialize:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0070                     ??_OSCILLATOR_Initialize:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0070                     ?_WDT_Initialize:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0070                     ??_WDT_Initialize:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0070                     ?_EUSART_Initialize:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0070                     ??_EUSART_Initialize:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0070                     ?_SYSTEM_Initialize:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0070                     ??_SYSTEM_Initialize:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     ?_EUSART_Read:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     ??_EUSART_Read:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ?_EUSART_Write:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     ??_EUSART_Write:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0070                     ?_main:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0070                     EUSART_Write@txData:	
   878                           ; 1 bytes @ 0x0
   879                           
   880                           
   881                           ; 1 bytes @ 0x0
   882  0070                     	ds	1
   883  0071                     ??_main:	
   884                           
   885                           ; 1 bytes @ 0x1
   886  0071                     	ds	2
   887                           
   888                           	psect	cstackBANK0
   889  0020                     __pcstackBANK0:	
   890  0020                     main@master:	
   891                           
   892                           ; 1 bytes @ 0x0
   893  0020                     	ds	1
   894  0021                     main@K_A:	
   895                           
   896                           ; 2 bytes @ 0x1
   897  0021                     	ds	2
   898  0023                     main@K_EXTRA:	
   899                           
   900                           ; 2 bytes @ 0x3
   901  0023                     	ds	2
   902  0025                     main@K_DWN:	
   903                           
   904                           ; 2 bytes @ 0x5
   905  0025                     	ds	2
   906  0027                     main@K_LFT:	
   907                           
   908                           ; 2 bytes @ 0x7
   909  0027                     	ds	2
   910  0029                     main@K_UP:	
   911                           
   912                           ; 2 bytes @ 0x9
   913  0029                     	ds	2
   914  002B                     main@K_RIGHT:	
   915                           
   916                           ; 2 bytes @ 0xB
   917  002B                     	ds	2
   918  002D                     main@K_B:	
   919                           
   920                           ; 2 bytes @ 0xD
   921  002D                     	ds	2
   922  002F                     main@msg:	
   923                           
   924                           ; 1 bytes @ 0xF
   925  002F                     	ds	1
   926  0030                     main@msg_up:	
   927                           
   928                           ; 1 bytes @ 0x10
   929  0030                     	ds	1
   930                           
   931                           	psect	maintext
   932  06D2                     __pmaintext:	
   933 ;;
   934 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   935 ;;
   936 ;; *************** function _main *****************
   937 ;; Defined at:
   938 ;;		line 49 in file "main.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;		None
   941 ;; Auto vars:     Size  Location     Type
   942 ;;  K_B             2   13[BANK0 ] int 
   943 ;;  K_RIGHT         2   11[BANK0 ] int 
   944 ;;  K_UP            2    9[BANK0 ] int 
   945 ;;  K_LFT           2    7[BANK0 ] int 
   946 ;;  K_DWN           2    5[BANK0 ] int 
   947 ;;  K_EXTRA         2    3[BANK0 ] int 
   948 ;;  K_A             2    1[BANK0 ] int 
   949 ;;  msg_up          1   16[BANK0 ] unsigned char 
   950 ;;  msg             1   15[BANK0 ] unsigned char 
   951 ;;  master          1    0[BANK0 ] unsigned char 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, status,2, status,0, pclath, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : B1F/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   961 ;;      Params:         0       0       0       0
   962 ;;      Locals:         0      17       0       0
   963 ;;      Temps:          2       0       0       0
   964 ;;      Totals:         2      17       0       0
   965 ;;Total ram usage:       19 bytes
   966 ;; Hardware stack levels required when called:    2
   967 ;; This function calls:
   968 ;;		_EUSART_Read
   969 ;;		_EUSART_Write
   970 ;;		_SYSTEM_Initialize
   971 ;; This function is called by:
   972 ;;		Startup code after reset
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           
   977                           ;psect for function _main
   978  06D2                     _main:	
   979                           
   980                           ;main.c: 52: SYSTEM_Initialize();
   981                           
   982                           ;incstack = 0
   983                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   984  06D2  3186  26AC  3186   	fcall	_SYSTEM_Initialize
   985                           
   986                           ;main.c: 53: char msg, master;
   987                           ;main.c: 54: bool msg_up=0;
   988  06D5  0020               	movlb	0	; select bank0
   989  06D6  01B0               	clrf	main@msg_up
   990  06D7                     l764:	
   991                           ;main.c: 71: while (1)
   992                           
   993                           
   994                           ;main.c: 72: {
   995                           ;main.c: 73: int K_A=PORTAbits.RA2;
   996  06D7  0020               	movlb	0	; select bank0
   997  06D8  0C0C               	rrf	12,w	;volatile
   998  06D9  0C89               	rrf	9,f
   999  06DA  3901               	andlw	1
  1000  06DB  00F1               	movwf	??_main
  1001  06DC  01F2               	clrf	??_main+1
  1002  06DD  0871               	movf	??_main,w
  1003  06DE  00A1               	movwf	main@K_A
  1004  06DF  0872               	movf	??_main+1,w
  1005  06E0  00A2               	movwf	main@K_A+1
  1006                           
  1007                           ;main.c: 74: int K_EXTRA=PORTBbits.RB4;
  1008  06E1  0E0D               	swapf	13,w	;volatile
  1009  06E2  3901               	andlw	1
  1010  06E3  00F1               	movwf	??_main
  1011  06E4  01F2               	clrf	??_main+1
  1012  06E5  0871               	movf	??_main,w
  1013  06E6  00A3               	movwf	main@K_EXTRA
  1014  06E7  0872               	movf	??_main+1,w
  1015  06E8  00A4               	movwf	main@K_EXTRA+1
  1016                           
  1017                           ;main.c: 75: int K_DWN=PORTBbits.RB6;
  1018  06E9  0E0D               	swapf	13,w	;volatile
  1019  06EA  0C89               	rrf	9,f
  1020  06EB  0C89               	rrf	9,f
  1021  06EC  3901               	andlw	1
  1022  06ED  00F1               	movwf	??_main
  1023  06EE  01F2               	clrf	??_main+1
  1024  06EF  0871               	movf	??_main,w
  1025  06F0  00A5               	movwf	main@K_DWN
  1026  06F1  0872               	movf	??_main+1,w
  1027  06F2  00A6               	movwf	main@K_DWN+1
  1028                           
  1029                           ;main.c: 76: int K_LFT=PORTCbits.RC0;
  1030  06F3  080E               	movf	14,w	;volatile
  1031  06F4  3901               	andlw	1
  1032  06F5  00F1               	movwf	??_main
  1033  06F6  01F2               	clrf	??_main+1
  1034  06F7  0871               	movf	??_main,w
  1035  06F8  00A7               	movwf	main@K_LFT
  1036  06F9  0872               	movf	??_main+1,w
  1037  06FA  00A8               	movwf	main@K_LFT+1
  1038                           
  1039                           ;main.c: 77: int K_UP=PORTCbits.RC1;
  1040  06FB  0C0E               	rrf	14,w	;volatile
  1041  06FC  3901               	andlw	1
  1042  06FD  00F1               	movwf	??_main
  1043  06FE  01F2               	clrf	??_main+1
  1044  06FF  0871               	movf	??_main,w
  1045  0700  00A9               	movwf	main@K_UP
  1046  0701  0872               	movf	??_main+1,w
  1047  0702  00AA               	movwf	main@K_UP+1
  1048                           
  1049                           ;main.c: 78: int K_RIGHT=PORTCbits.RC2;
  1050  0703  0C0E               	rrf	14,w	;volatile
  1051  0704  0C89               	rrf	9,f
  1052  0705  3901               	andlw	1
  1053  0706  00F1               	movwf	??_main
  1054  0707  01F2               	clrf	??_main+1
  1055  0708  0871               	movf	??_main,w
  1056  0709  00AB               	movwf	main@K_RIGHT
  1057  070A  0872               	movf	??_main+1,w
  1058  070B  00AC               	movwf	main@K_RIGHT+1
  1059                           
  1060                           ;main.c: 79: int K_B=PORTCbits.RC7;
  1061  070C  0D0E               	rlf	14,w	;volatile
  1062  070D  0D0E               	rlf	14,w	;volatile
  1063  070E  3901               	andlw	1
  1064  070F  00F1               	movwf	??_main
  1065  0710  01F2               	clrf	??_main+1
  1066  0711  0871               	movf	??_main,w
  1067  0712  00AD               	movwf	main@K_B
  1068  0713  0872               	movf	??_main+1,w
  1069  0714  00AE               	movwf	main@K_B+1
  1070                           
  1071                           ;main.c: 82: master=EUSART_Read();
  1072  0715  3186  2697  3186   	fcall	_EUSART_Read
  1073  0718  00F1               	movwf	??_main
  1074  0719  0871               	movf	??_main,w
  1075  071A  0020               	movlb	0	; select bank0
  1076  071B  00A0               	movwf	main@master
  1077                           
  1078                           ;main.c: 83: if (master == 'w'){
  1079  071C  3077               	movlw	119
  1080  071D  0620               	xorwf	main@master,w
  1081  071E  1D03               	btfss	3,2
  1082  071F  2F34               	goto	l792
  1083                           
  1084                           ;main.c: 84: if (msg_up == 1){
  1085  0720  0330               	decf	main@msg_up,w
  1086  0721  1D03               	btfss	3,2
  1087  0722  2F25               	goto	l786
  1088                           
  1089                           ;main.c: 85: EUSART_Write('1');
  1090  0723  3031               	movlw	49
  1091  0724  2F2A               	goto	L1
  1092  0725                     l786:	
  1093                           ;main.c: 86: }
  1094                           
  1095                           
  1096                           ;main.c: 87: else if(msg_up == 0){
  1097  0725  0020               	movlb	0	; select bank0
  1098  0726  0830               	movf	main@msg_up,w
  1099  0727  1D03               	btfss	3,2
  1100  0728  2F2D               	goto	l113
  1101                           
  1102                           ;main.c: 88: EUSART_Write('0');
  1103  0729  3030               	movlw	48
  1104  072A                     L1:	
  1105  072A  3186  268F  3186   	fcall	_EUSART_Write
  1106  072D                     l113:	
  1107                           
  1108                           ;main.c: 89: }
  1109                           ;main.c: 90: EUSART_Write(msg);
  1110  072D  0020               	movlb	0	; select bank0
  1111  072E  082F               	movf	main@msg,w
  1112  072F  3186  268F  3186   	fcall	_EUSART_Write
  1113                           
  1114                           ;main.c: 91: msg_up=0;
  1115  0732  0020               	movlb	0	; select bank0
  1116  0733  01B0               	clrf	main@msg_up
  1117  0734                     l792:	
  1118                           
  1119                           ;main.c: 92: }
  1120                           ;main.c: 93: if(K_A==1){
  1121  0734  0321               	decf	main@K_A,w
  1122  0735  0422               	iorwf	main@K_A+1,w
  1123  0736  1D03               	btfss	3,2
  1124  0737  2F4C               	goto	l800
  1125                           
  1126                           ;main.c: 94: msg='A';
  1127  0738  3041               	movlw	65
  1128  0739  00F1               	movwf	??_main
  1129  073A  0871               	movf	??_main,w
  1130  073B  00AF               	movwf	main@msg
  1131                           
  1132                           ;main.c: 95: msg_up=1;
  1133  073C  01B0               	clrf	main@msg_up
  1134  073D  0AB0               	incf	main@msg_up,f
  1135  073E                     l116:	
  1136                           ;main.c: 96: while (K_A == 1){
  1137                           
  1138  073E  0321               	decf	main@K_A,w
  1139  073F  0422               	iorwf	main@K_A+1,w
  1140  0740  1D03               	btfss	3,2
  1141  0741  2FF3               	goto	l185
  1142                           
  1143                           ;main.c: 97: K_A=PORTAbits.RA2;
  1144  0742  0C0C               	rrf	12,w	;volatile
  1145  0743  0C89               	rrf	9,f
  1146  0744  3901               	andlw	1
  1147  0745  00F1               	movwf	??_main
  1148  0746  01F2               	clrf	??_main+1
  1149  0747  0871               	movf	??_main,w
  1150  0748  00A1               	movwf	main@K_A
  1151  0749  0872               	movf	??_main+1,w
  1152  074A  00A2               	movwf	main@K_A+1
  1153  074B  2F3E               	goto	l116
  1154  074C                     l800:	
  1155                           ;main.c: 102: }
  1156                           
  1157                           ;main.c: 101: do { LATCbits.LATC4 = 0; } while(0);
  1158                           
  1159                           ;main.c: 100: do { LATCbits.LATC3 = 0; } while(0);
  1160                           
  1161                           ;main.c: 98: }
  1162                           ;main.c: 99: do { LATCbits.LATC6 = 1; } while(0);
  1163                           
  1164                           
  1165                           ;main.c: 103: else if(K_EXTRA==1){
  1166  074C  0020               	movlb	0	; select bank0
  1167  074D  0323               	decf	main@K_EXTRA,w
  1168  074E  0424               	iorwf	main@K_EXTRA+1,w
  1169  074F  1D03               	btfss	3,2
  1170  0750  2F68               	goto	l808
  1171                           
  1172                           ;main.c: 104: msg='X';
  1173  0751  3058               	movlw	88
  1174  0752  00F1               	movwf	??_main
  1175  0753  0871               	movf	??_main,w
  1176  0754  00AF               	movwf	main@msg
  1177                           
  1178                           ;main.c: 105: msg_up=1;
  1179  0755  01B0               	clrf	main@msg_up
  1180  0756  0AB0               	incf	main@msg_up,f
  1181  0757                     l127:	
  1182                           ;main.c: 106: while (K_EXTRA == 1){
  1183                           
  1184  0757  0323               	decf	main@K_EXTRA,w
  1185  0758  0424               	iorwf	main@K_EXTRA+1,w
  1186  0759  1D03               	btfss	3,2
  1187  075A  2F64               	goto	l130
  1188                           
  1189                           ;main.c: 107: K_EXTRA=PORTBbits.RB4;
  1190  075B  0E0D               	swapf	13,w	;volatile
  1191  075C  3901               	andlw	1
  1192  075D  00F1               	movwf	??_main
  1193  075E  01F2               	clrf	??_main+1
  1194  075F  0871               	movf	??_main,w
  1195  0760  00A3               	movwf	main@K_EXTRA
  1196  0761  0872               	movf	??_main+1,w
  1197  0762  00A4               	movwf	main@K_EXTRA+1
  1198  0763  2F57               	goto	l127
  1199  0764                     l130:	
  1200                           ;main.c: 108: }
  1201                           ;main.c: 109: do { LATCbits.LATC6 = 0; } while(0);
  1202                           
  1203  0764  0022               	movlb	2	; select bank2
  1204  0765  130E               	bcf	14,6	;volatile
  1205                           
  1206                           ;main.c: 110: do { LATCbits.LATC3 = 1; } while(0);
  1207  0766  158E               	bsf	14,3	;volatile
  1208                           
  1209                           ;main.c: 111: do { LATCbits.LATC4 = 0; } while(0);
  1210  0767  2FF6               	goto	l189
  1211  0768                     l808:	
  1212                           ;main.c: 112: }
  1213                           
  1214                           
  1215                           ;main.c: 113: else if(K_DWN==1){
  1216  0768  0020               	movlb	0	; select bank0
  1217  0769  0325               	decf	main@K_DWN,w
  1218  076A  0426               	iorwf	main@K_DWN+1,w
  1219  076B  1D03               	btfss	3,2
  1220  076C  2F85               	goto	l816
  1221                           
  1222                           ;main.c: 114: msg='D';
  1223  076D  3044               	movlw	68
  1224  076E  00F1               	movwf	??_main
  1225  076F  0871               	movf	??_main,w
  1226  0770  00AF               	movwf	main@msg
  1227                           
  1228                           ;main.c: 115: msg_up=1;
  1229  0771  01B0               	clrf	main@msg_up
  1230  0772  0AB0               	incf	main@msg_up,f
  1231  0773                     l138:	
  1232                           ;main.c: 116: while (K_DWN == 1){
  1233                           
  1234  0773  0325               	decf	main@K_DWN,w
  1235  0774  0426               	iorwf	main@K_DWN+1,w
  1236  0775  1D03               	btfss	3,2
  1237  0776  2F82               	goto	l141
  1238                           
  1239                           ;main.c: 117: K_DWN=PORTBbits.RB6;
  1240  0777  0E0D               	swapf	13,w	;volatile
  1241  0778  0C89               	rrf	9,f
  1242  0779  0C89               	rrf	9,f
  1243  077A  3901               	andlw	1
  1244  077B  00F1               	movwf	??_main
  1245  077C  01F2               	clrf	??_main+1
  1246  077D  0871               	movf	??_main,w
  1247  077E  00A5               	movwf	main@K_DWN
  1248  077F  0872               	movf	??_main+1,w
  1249  0780  00A6               	movwf	main@K_DWN+1
  1250  0781  2F73               	goto	l138
  1251  0782                     l141:	
  1252                           ;main.c: 118: }
  1253                           ;main.c: 119: do { LATCbits.LATC6 = 0; } while(0);
  1254                           
  1255  0782  0022               	movlb	2	; select bank2
  1256  0783  130E               	bcf	14,6	;volatile
  1257  0784  2FBB               	goto	L2
  1258  0785                     l816:	
  1259                           ;main.c: 122: }
  1260                           
  1261                           ;main.c: 121: do { LATCbits.LATC4 = 1; } while(0);
  1262                           
  1263                           ;main.c: 120: do { LATCbits.LATC3 = 0; } while(0);
  1264                           
  1265                           
  1266                           ;main.c: 123: else if(K_LFT==1){
  1267  0785  0020               	movlb	0	; select bank0
  1268  0786  0327               	decf	main@K_LFT,w
  1269  0787  0428               	iorwf	main@K_LFT+1,w
  1270  0788  1D03               	btfss	3,2
  1271  0789  2FA1               	goto	l824
  1272                           
  1273                           ;main.c: 124: msg = 'L';
  1274  078A  304C               	movlw	76
  1275  078B  00F1               	movwf	??_main
  1276  078C  0871               	movf	??_main,w
  1277  078D  00AF               	movwf	main@msg
  1278                           
  1279                           ;main.c: 125: msg_up=1;
  1280  078E  01B0               	clrf	main@msg_up
  1281  078F  0AB0               	incf	main@msg_up,f
  1282  0790                     l149:	
  1283                           ;main.c: 126: while (K_LFT == 1){
  1284                           
  1285  0790  0327               	decf	main@K_LFT,w
  1286  0791  0428               	iorwf	main@K_LFT+1,w
  1287  0792  1D03               	btfss	3,2
  1288  0793  2F9D               	goto	l152
  1289                           
  1290                           ;main.c: 127: K_LFT=PORTCbits.RC0;
  1291  0794  080E               	movf	14,w	;volatile
  1292  0795  3901               	andlw	1
  1293  0796  00F1               	movwf	??_main
  1294  0797  01F2               	clrf	??_main+1
  1295  0798  0871               	movf	??_main,w
  1296  0799  00A7               	movwf	main@K_LFT
  1297  079A  0872               	movf	??_main+1,w
  1298  079B  00A8               	movwf	main@K_LFT+1
  1299  079C  2F90               	goto	l149
  1300  079D                     l152:	
  1301                           ;main.c: 128: }
  1302                           ;main.c: 129: do { LATCbits.LATC6 = 0; } while(0);
  1303                           
  1304  079D  0022               	movlb	2	; select bank2
  1305  079E  130E               	bcf	14,6	;volatile
  1306                           
  1307                           ;main.c: 130: do { LATCbits.LATC3 = 1; } while(0);
  1308  079F  158E               	bsf	14,3	;volatile
  1309                           
  1310                           ;main.c: 131: do { LATCbits.LATC4 = 1; } while(0);
  1311  07A0  2FBC               	goto	l167
  1312  07A1                     l824:	
  1313                           ;main.c: 132: }
  1314                           
  1315                           
  1316                           ;main.c: 133: else if(K_UP==1){
  1317  07A1  0020               	movlb	0	; select bank0
  1318  07A2  0329               	decf	main@K_UP,w
  1319  07A3  042A               	iorwf	main@K_UP+1,w
  1320  07A4  1D03               	btfss	3,2
  1321  07A5  2FBE               	goto	l832
  1322                           
  1323                           ;main.c: 134: msg='U';
  1324  07A6  3055               	movlw	85
  1325  07A7  00F1               	movwf	??_main
  1326  07A8  0871               	movf	??_main,w
  1327  07A9  00AF               	movwf	main@msg
  1328                           
  1329                           ;main.c: 135: msg_up=1;
  1330  07AA  01B0               	clrf	main@msg_up
  1331  07AB  0AB0               	incf	main@msg_up,f
  1332  07AC                     l160:	
  1333                           ;main.c: 136: while (K_UP==1){
  1334                           
  1335  07AC  0329               	decf	main@K_UP,w
  1336  07AD  042A               	iorwf	main@K_UP+1,w
  1337  07AE  1D03               	btfss	3,2
  1338  07AF  2FB9               	goto	l163
  1339                           
  1340                           ;main.c: 137: K_UP=PORTCbits.RC1;
  1341  07B0  0C0E               	rrf	14,w	;volatile
  1342  07B1  3901               	andlw	1
  1343  07B2  00F1               	movwf	??_main
  1344  07B3  01F2               	clrf	??_main+1
  1345  07B4  0871               	movf	??_main,w
  1346  07B5  00A9               	movwf	main@K_UP
  1347  07B6  0872               	movf	??_main+1,w
  1348  07B7  00AA               	movwf	main@K_UP+1
  1349  07B8  2FAC               	goto	l160
  1350  07B9                     l163:	
  1351                           ;main.c: 138: }
  1352                           ;main.c: 139: do { LATCbits.LATC6 = 1; } while(0);
  1353                           
  1354  07B9  0022               	movlb	2	; select bank2
  1355  07BA  170E               	bsf	14,6	;volatile
  1356  07BB                     L2:	
  1357                           
  1358                           ;main.c: 140: do { LATCbits.LATC3 = 0; } while(0);
  1359  07BB  118E               	bcf	14,3	;volatile
  1360  07BC                     l167:	
  1361                           ;main.c: 141: do { LATCbits.LATC4 = 1; } while(0);
  1362                           
  1363  07BC  160E               	bsf	14,4	;volatile
  1364                           
  1365                           ;main.c: 142: }
  1366  07BD  2ED7               	goto	l764
  1367  07BE                     l832:	
  1368                           
  1369                           ;main.c: 143: else if(K_RIGHT==1){
  1370  07BE  0020               	movlb	0	; select bank0
  1371  07BF  032B               	decf	main@K_RIGHT,w
  1372  07C0  042C               	iorwf	main@K_RIGHT+1,w
  1373  07C1  1D03               	btfss	3,2
  1374  07C2  2FDA               	goto	l840
  1375                           
  1376                           ;main.c: 144: msg='R';
  1377  07C3  3052               	movlw	82
  1378  07C4  00F1               	movwf	??_main
  1379  07C5  0871               	movf	??_main,w
  1380  07C6  00AF               	movwf	main@msg
  1381                           
  1382                           ;main.c: 145: msg_up=1;
  1383  07C7  01B0               	clrf	main@msg_up
  1384  07C8  0AB0               	incf	main@msg_up,f
  1385  07C9                     l171:	
  1386                           ;main.c: 146: while (K_RIGHT==1){
  1387                           
  1388  07C9  032B               	decf	main@K_RIGHT,w
  1389  07CA  042C               	iorwf	main@K_RIGHT+1,w
  1390  07CB  1D03               	btfss	3,2
  1391  07CC  2FD7               	goto	l174
  1392                           
  1393                           ;main.c: 147: K_RIGHT=PORTCbits.RC2;
  1394  07CD  0C0E               	rrf	14,w	;volatile
  1395  07CE  0C89               	rrf	9,f
  1396  07CF  3901               	andlw	1
  1397  07D0  00F1               	movwf	??_main
  1398  07D1  01F2               	clrf	??_main+1
  1399  07D2  0871               	movf	??_main,w
  1400  07D3  00AB               	movwf	main@K_RIGHT
  1401  07D4  0872               	movf	??_main+1,w
  1402  07D5  00AC               	movwf	main@K_RIGHT+1
  1403  07D6  2FC9               	goto	l171
  1404  07D7                     l174:	
  1405                           ;main.c: 148: }
  1406                           ;main.c: 149: do { LATCbits.LATC6 = 0; } while(0);
  1407                           
  1408  07D7  0022               	movlb	2	; select bank2
  1409  07D8  130E               	bcf	14,6	;volatile
  1410  07D9  2FF5               	goto	L3
  1411  07DA                     l840:	
  1412                           ;main.c: 152: }
  1413                           
  1414                           ;main.c: 151: do { LATCbits.LATC4 = 0; } while(0);
  1415                           
  1416                           ;main.c: 150: do { LATCbits.LATC3 = 0; } while(0);
  1417                           
  1418                           
  1419                           ;main.c: 153: else if(K_B==1){
  1420  07DA  0020               	movlb	0	; select bank0
  1421  07DB  032D               	decf	main@K_B,w
  1422  07DC  042E               	iorwf	main@K_B+1,w
  1423  07DD  1D03               	btfss	3,2
  1424  07DE  2FF8               	goto	l848
  1425                           
  1426                           ;main.c: 154: msg='B';
  1427  07DF  3042               	movlw	66
  1428  07E0  00F1               	movwf	??_main
  1429  07E1  0871               	movf	??_main,w
  1430  07E2  00AF               	movwf	main@msg
  1431                           
  1432                           ;main.c: 155: msg_up=1;
  1433  07E3  01B0               	clrf	main@msg_up
  1434  07E4  0AB0               	incf	main@msg_up,f
  1435  07E5                     l182:	
  1436                           ;main.c: 156: while (K_B==1){
  1437                           
  1438  07E5  032D               	decf	main@K_B,w
  1439  07E6  042E               	iorwf	main@K_B+1,w
  1440  07E7  1D03               	btfss	3,2
  1441  07E8  2FF3               	goto	l185
  1442                           
  1443                           ;main.c: 157: K_B=PORTCbits.RC7;
  1444  07E9  0D0E               	rlf	14,w	;volatile
  1445  07EA  0D0E               	rlf	14,w	;volatile
  1446  07EB  3901               	andlw	1
  1447  07EC  00F1               	movwf	??_main
  1448  07ED  01F2               	clrf	??_main+1
  1449  07EE  0871               	movf	??_main,w
  1450  07EF  00AD               	movwf	main@K_B
  1451  07F0  0872               	movf	??_main+1,w
  1452  07F1  00AE               	movwf	main@K_B+1
  1453  07F2  2FE5               	goto	l182
  1454  07F3                     l185:	
  1455                           ;main.c: 158: }
  1456                           ;main.c: 159: do { LATCbits.LATC6 = 1; } while(0);
  1457                           
  1458  07F3  0022               	movlb	2	; select bank2
  1459  07F4  170E               	bsf	14,6	;volatile
  1460  07F5                     L3:	
  1461                           
  1462                           ;main.c: 160: do { LATCbits.LATC3 = 0; } while(0);
  1463  07F5  118E               	bcf	14,3	;volatile
  1464  07F6                     l189:	
  1465                           ;main.c: 161: do { LATCbits.LATC4 = 0; } while(0);
  1466                           
  1467  07F6  120E               	bcf	14,4	;volatile
  1468                           
  1469                           ;main.c: 162: }
  1470  07F7  2ED7               	goto	l764
  1471  07F8                     l848:	
  1472                           
  1473                           ;main.c: 163: else{
  1474                           ;main.c: 164: EUSART_Write('0');
  1475  07F8  3030               	movlw	48
  1476  07F9  3186  268F  3186   	fcall	_EUSART_Write
  1477  07FC  2ED7               	goto	l764
  1478  07FD                     __end_of_main:	
  1479                           
  1480                           	psect	text1
  1481  06AC                     __ptext1:	
  1482 ;; *************** function _SYSTEM_Initialize *****************
  1483 ;; Defined at:
  1484 ;;		line 68 in file "mcc_generated_files/mcc.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;		None
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;		None
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  1    wreg      void 
  1491 ;; Registers used:
  1492 ;;		wreg, status,2, status,0, pclath, cstack
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1498 ;;      Params:         0       0       0       0
  1499 ;;      Locals:         0       0       0       0
  1500 ;;      Temps:          0       0       0       0
  1501 ;;      Totals:         0       0       0       0
  1502 ;;Total ram usage:        0 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; Hardware stack levels required when called:    1
  1505 ;; This function calls:
  1506 ;;		_EUSART_Initialize
  1507 ;;		_OSCILLATOR_Initialize
  1508 ;;		_PIN_MANAGER_Initialize
  1509 ;;		_WDT_Initialize
  1510 ;; This function is called by:
  1511 ;;		_main
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           
  1516                           ;psect for function _SYSTEM_Initialize
  1517  06AC                     _SYSTEM_Initialize:	
  1518                           
  1519                           ;mcc.c: 71: PIN_MANAGER_Initialize();
  1520                           
  1521                           ;incstack = 0
  1522                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1523  06AC  3186  26B8  3186   	fcall	_PIN_MANAGER_Initialize
  1524                           
  1525                           ;mcc.c: 72: OSCILLATOR_Initialize();
  1526  06AF  3186  2687  3186   	fcall	_OSCILLATOR_Initialize
  1527                           
  1528                           ;mcc.c: 73: WDT_Initialize();
  1529  06B2  3186  268B  3186   	fcall	_WDT_Initialize
  1530                           
  1531                           ;mcc.c: 74: EUSART_Initialize();
  1532  06B5  3186  26A1         	fcall	_EUSART_Initialize
  1533  06B7  0008               	return
  1534  06B8                     __end_of_SYSTEM_Initialize:	
  1535                           
  1536                           	psect	text2
  1537  068B                     __ptext2:	
  1538 ;; *************** function _WDT_Initialize *****************
  1539 ;; Defined at:
  1540 ;;		line 83 in file "mcc_generated_files/mcc.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;		None
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;		None
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1554 ;;      Params:         0       0       0       0
  1555 ;;      Locals:         0       0       0       0
  1556 ;;      Temps:          0       0       0       0
  1557 ;;      Totals:         0       0       0       0
  1558 ;;Total ram usage:        0 bytes
  1559 ;; Hardware stack levels used:    1
  1560 ;; This function calls:
  1561 ;;		Nothing
  1562 ;; This function is called by:
  1563 ;;		_SYSTEM_Initialize
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           
  1568                           ;psect for function _WDT_Initialize
  1569  068B                     _WDT_Initialize:	
  1570                           
  1571                           ;mcc.c: 86: WDTCON = 0x16;
  1572                           
  1573                           ;incstack = 0
  1574                           ; Regs used in _WDT_Initialize: [wreg]
  1575  068B  3016               	movlw	22
  1576  068C  0021               	movlb	1	; select bank1
  1577  068D  0097               	movwf	23	;volatile
  1578  068E  0008               	return
  1579  068F                     __end_of_WDT_Initialize:	
  1580                           
  1581                           	psect	text3
  1582  06B8                     __ptext3:	
  1583 ;; *************** function _PIN_MANAGER_Initialize *****************
  1584 ;; Defined at:
  1585 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;		None
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;		None
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      void 
  1592 ;; Registers used:
  1593 ;;		wreg, status,2
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1599 ;;      Params:         0       0       0       0
  1600 ;;      Locals:         0       0       0       0
  1601 ;;      Temps:          0       0       0       0
  1602 ;;      Totals:         0       0       0       0
  1603 ;;Total ram usage:        0 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; This function calls:
  1606 ;;		Nothing
  1607 ;; This function is called by:
  1608 ;;		_SYSTEM_Initialize
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           
  1613                           ;psect for function _PIN_MANAGER_Initialize
  1614  06B8                     _PIN_MANAGER_Initialize:	
  1615                           
  1616                           ;pin_manager.c: 57: LATA = 0x00;
  1617                           
  1618                           ;incstack = 0
  1619                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1620  06B8  0022               	movlb	2	; select bank2
  1621  06B9  018C               	clrf	12	;volatile
  1622                           
  1623                           ;pin_manager.c: 58: LATB = 0x00;
  1624  06BA  018D               	clrf	13	;volatile
  1625                           
  1626                           ;pin_manager.c: 59: LATC = 0x48;
  1627  06BB  3048               	movlw	72
  1628  06BC  008E               	movwf	14	;volatile
  1629                           
  1630                           ;pin_manager.c: 64: TRISA = 0x3F;
  1631  06BD  303F               	movlw	63
  1632  06BE  0021               	movlb	1	; select bank1
  1633  06BF  008C               	movwf	12	;volatile
  1634                           
  1635                           ;pin_manager.c: 65: TRISB = 0x70;
  1636  06C0  3070               	movlw	112
  1637  06C1  008D               	movwf	13	;volatile
  1638                           
  1639                           ;pin_manager.c: 66: TRISC = 0xA7;
  1640  06C2  30A7               	movlw	167
  1641  06C3  008E               	movwf	14	;volatile
  1642                           
  1643                           ;pin_manager.c: 71: ANSELC = 0x48;
  1644  06C4  3048               	movlw	72
  1645  06C5  0023               	movlb	3	; select bank3
  1646  06C6  008E               	movwf	14	;volatile
  1647                           
  1648                           ;pin_manager.c: 72: ANSELB = 0x00;
  1649  06C7  018D               	clrf	13	;volatile
  1650                           
  1651                           ;pin_manager.c: 73: ANSELA = 0x13;
  1652  06C8  3013               	movlw	19
  1653  06C9  008C               	movwf	12	;volatile
  1654                           
  1655                           ;pin_manager.c: 78: WPUB = 0x00;
  1656  06CA  0024               	movlb	4	; select bank4
  1657  06CB  018D               	clrf	13	;volatile
  1658                           
  1659                           ;pin_manager.c: 79: WPUA = 0x00;
  1660  06CC  018C               	clrf	12	;volatile
  1661                           
  1662                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 0;
  1663  06CD  0021               	movlb	1	; select bank1
  1664  06CE  1395               	bcf	21,7	;volatile
  1665                           
  1666                           ;pin_manager.c: 86: APFCON = 0x00;
  1667  06CF  0022               	movlb	2	; select bank2
  1668  06D0  019D               	clrf	29	;volatile
  1669  06D1  0008               	return
  1670  06D2                     __end_of_PIN_MANAGER_Initialize:	
  1671                           
  1672                           	psect	text4
  1673  0687                     __ptext4:	
  1674 ;; *************** function _OSCILLATOR_Initialize *****************
  1675 ;; Defined at:
  1676 ;;		line 77 in file "mcc_generated_files/mcc.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;		None
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;		None
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      void 
  1683 ;; Registers used:
  1684 ;;		wreg
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1690 ;;      Params:         0       0       0       0
  1691 ;;      Locals:         0       0       0       0
  1692 ;;      Temps:          0       0       0       0
  1693 ;;      Totals:         0       0       0       0
  1694 ;;Total ram usage:        0 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; This function calls:
  1697 ;;		Nothing
  1698 ;; This function is called by:
  1699 ;;		_SYSTEM_Initialize
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           
  1704                           ;psect for function _OSCILLATOR_Initialize
  1705  0687                     _OSCILLATOR_Initialize:	
  1706                           
  1707                           ;mcc.c: 80: OSCCON = 0x38;
  1708                           
  1709                           ;incstack = 0
  1710                           ; Regs used in _OSCILLATOR_Initialize: [wreg]
  1711  0687  3038               	movlw	56
  1712  0688  0021               	movlb	1	; select bank1
  1713  0689  0099               	movwf	25	;volatile
  1714  068A  0008               	return
  1715  068B                     __end_of_OSCILLATOR_Initialize:	
  1716                           
  1717                           	psect	text5
  1718  06A1                     __ptext5:	
  1719 ;; *************** function _EUSART_Initialize *****************
  1720 ;; Defined at:
  1721 ;;		line 55 in file "mcc_generated_files/eusart.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;		None
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;		None
  1726 ;; Return value:  Size  Location     Type
  1727 ;;                  1    wreg      void 
  1728 ;; Registers used:
  1729 ;;		wreg, status,2
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1735 ;;      Params:         0       0       0       0
  1736 ;;      Locals:         0       0       0       0
  1737 ;;      Temps:          0       0       0       0
  1738 ;;      Totals:         0       0       0       0
  1739 ;;Total ram usage:        0 bytes
  1740 ;; Hardware stack levels used:    1
  1741 ;; This function calls:
  1742 ;;		Nothing
  1743 ;; This function is called by:
  1744 ;;		_SYSTEM_Initialize
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           
  1749                           ;psect for function _EUSART_Initialize
  1750  06A1                     _EUSART_Initialize:	
  1751                           
  1752                           ;eusart.c: 60: BAUDCON = 0x08;
  1753                           
  1754                           ;incstack = 0
  1755                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  1756  06A1  3008               	movlw	8
  1757  06A2  0023               	movlb	3	; select bank3
  1758  06A3  009F               	movwf	31	;volatile
  1759                           
  1760                           ;eusart.c: 63: RCSTA = 0x90;
  1761  06A4  3090               	movlw	144
  1762  06A5  009D               	movwf	29	;volatile
  1763                           
  1764                           ;eusart.c: 66: TXSTA = 0x24;
  1765  06A6  3024               	movlw	36
  1766  06A7  009E               	movwf	30	;volatile
  1767                           
  1768                           ;eusart.c: 69: SPBRGL = 0x0C;
  1769  06A8  300C               	movlw	12
  1770  06A9  009B               	movwf	27	;volatile
  1771                           
  1772                           ;eusart.c: 72: SPBRGH = 0x00;
  1773  06AA  019C               	clrf	28	;volatile
  1774  06AB  0008               	return
  1775  06AC                     __end_of_EUSART_Initialize:	
  1776                           
  1777                           	psect	text6
  1778  068F                     __ptext6:	
  1779 ;; *************** function _EUSART_Write *****************
  1780 ;; Defined at:
  1781 ;;		line 96 in file "mcc_generated_files/eusart.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;  txData          1    wreg     unsigned char 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  txData          1    0[COMMON] unsigned char 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		wreg
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1795 ;;      Params:         0       0       0       0
  1796 ;;      Locals:         1       0       0       0
  1797 ;;      Temps:          0       0       0       0
  1798 ;;      Totals:         1       0       0       0
  1799 ;;Total ram usage:        1 bytes
  1800 ;; Hardware stack levels used:    1
  1801 ;; This function calls:
  1802 ;;		Nothing
  1803 ;; This function is called by:
  1804 ;;		_main
  1805 ;;		_putch
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           
  1810                           ;psect for function _EUSART_Write
  1811  068F                     _EUSART_Write:	
  1812                           
  1813                           ;incstack = 0
  1814                           ; Regs used in _EUSART_Write: [wreg]
  1815                           ;EUSART_Write@txData stored from wreg
  1816  068F  00F0               	movwf	EUSART_Write@txData
  1817  0690                     l52:	
  1818                           ;eusart.c: 99: {
  1819                           
  1820                           ;eusart.c: 98: while(0 == PIR1bits.TXIF)
  1821                           
  1822  0690  0020               	movlb	0	; select bank0
  1823  0691  1E11               	btfss	17,4	;volatile
  1824  0692  2E90               	goto	l52
  1825                           
  1826                           ;eusart.c: 100: }
  1827                           ;eusart.c: 102: TXREG = txData;
  1828  0693  0870               	movf	EUSART_Write@txData,w
  1829  0694  0023               	movlb	3	; select bank3
  1830  0695  009A               	movwf	26	;volatile
  1831  0696  0008               	return
  1832  0697                     __end_of_EUSART_Write:	
  1833                           
  1834                           	psect	text7
  1835  0697                     __ptext7:	
  1836 ;; *************** function _EUSART_Read *****************
  1837 ;; Defined at:
  1838 ;;		line 77 in file "mcc_generated_files/eusart.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;		None
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;		None
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      unsigned char 
  1845 ;; Registers used:
  1846 ;;		wreg
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1852 ;;      Params:         0       0       0       0
  1853 ;;      Locals:         0       0       0       0
  1854 ;;      Temps:          0       0       0       0
  1855 ;;      Totals:         0       0       0       0
  1856 ;;Total ram usage:        0 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_main
  1862 ;;		_getch
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           
  1867                           ;psect for function _EUSART_Read
  1868  0697                     _EUSART_Read:	
  1869  0697                     l45:	
  1870                           ;eusart.c: 81: {
  1871                           
  1872                           ;eusart.c: 80: while(!PIR1bits.RCIF)
  1873                           
  1874                           ;incstack = 0
  1875                           ; Regs used in _EUSART_Read: [wreg]
  1876                           
  1877  0697  0020               	movlb	0	; select bank0
  1878  0698  1E91               	btfss	17,5	;volatile
  1879  0699  2E97               	goto	l45
  1880                           
  1881                           ;eusart.c: 82: }
  1882                           ;eusart.c: 85: if(1 == RCSTAbits.OERR)
  1883  069A  0023               	movlb	3	; select bank3
  1884  069B  1C9D               	btfss	29,1	;volatile
  1885  069C  2E9F               	goto	l746
  1886                           
  1887                           ;eusart.c: 86: {
  1888                           ;eusart.c: 89: RCSTAbits.SPEN = 0;
  1889  069D  139D               	bcf	29,7	;volatile
  1890                           
  1891                           ;eusart.c: 90: RCSTAbits.SPEN = 1;
  1892  069E  179D               	bsf	29,7	;volatile
  1893  069F                     l746:	
  1894                           
  1895                           ;eusart.c: 91: }
  1896                           ;eusart.c: 93: return RCREG;
  1897  069F  0819               	movf	25,w	;volatile
  1898  06A0  0008               	return
  1899  06A1                     __end_of_EUSART_Read:	
  1900  007E                     btemp	set	126	;btemp
  1901  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       3
    BANK0            80     17      17
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_EUSART_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0     449
                                              1 COMMON     2     2      0
                                              0 BANK0     17    17      0
                        _EUSART_Read
                       _EUSART_Write
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _EUSART_Write
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      3       3       2       21.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     11      11       6       21.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Apr 13 09:55:50 2018

                    __CFG_CP$OFF 0000                               l52 0690                               l45 0697  
                    __CFG_LVP$ON 0000                              l113 072D                              l130 0764  
                            l116 073E                              l141 0782                              l127 0757  
                            l160 07AC                              l152 079D                              l138 0773  
                            l171 07C9                              l163 07B9                              l149 0790  
                            l182 07E5                              l174 07D7                              l167 07BC  
                            l185 07F3                              l189 07F6                              l800 074C  
                            l840 07DA                              l832 07BE                              l824 07A1  
                            l816 0785                              l808 0768                              l746 069F  
                            l764 06D7                              l848 07F8                              l792 0734  
                            l786 0725                     __CFG_BORV$LO 0000                              wreg 0009  
                   __CFG_IESO$ON 0000                     ?_EUSART_Read 0070                             _LATA 010C  
                           _LATB 010D                             _LATC 010E                             _WPUA 020C  
                           _WPUB 020D                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
                           _main 06D2                             btemp 007E                    __CFG_BOREN$ON 0000  
                           start 0002                    __CFG_MCLRE$ON 0000                    ?_EUSART_Write 0070  
 __size_of_OSCILLATOR_Initialize 0004    __end_of_OSCILLATOR_Initialize 068B                            ?_main 0070  
                  __CFG_WDTE$OFF 0000                            _RCREG 0199                            _RCSTA 019D  
                          _TRISA 008C                            _TRISB 008D                            _TRISC 008E  
                          _TXREG 019A                            _TXSTA 019E                   _WDT_Initialize 068B  
                          status 0003                            wtemp0 007E                  __initialization 07FD  
                   __end_of_main 07FD                   ??_EUSART_Write 0070                   __CFG_LPBOR$OFF 0000  
                         ??_main 0071           __end_of_WDT_Initialize 068F                           _APFCON 011D  
                         _ANSELA 018C                           _ANSELB 018D                           _ANSELC 018E  
                         _OSCCON 0099                           _SPBRGH 019C                           _SPBRGL 019B  
                         _WDTCON 0097                   __CFG_PWRTE$OFF 0000                   __CFG_STVREN$ON 0000  
                ?_WDT_Initialize 0070             __size_of_EUSART_Read 000A                _SYSTEM_Initialize 06AC  
        __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070                   __pcstackCOMMON 0070  
            ??_SYSTEM_Initialize 0070                   _OPTION_REGbits 0095        __end_of_SYSTEM_Initialize 06B8  
           __end_of_EUSART_Write 0697                       __pmaintext 06D2                          _BAUDCON 019F  
                        __ptext1 06AC                          __ptext2 068B                          __ptext3 06B8  
                        __ptext4 0687                          __ptext5 06A1                          __ptext6 068F  
                        __ptext7 0697            _OSCILLATOR_Initialize 0687         ??_PIN_MANAGER_Initialize 0070  
                        main@K_A 0021                          main@K_B 002D       __size_of_SYSTEM_Initialize 000C  
                        main@msg 002F             end_of_initialization 07FD                _EUSART_Initialize 06A1  
             ?_EUSART_Initialize 0070                        _RCSTAbits 019D              ??_EUSART_Initialize 0070  
               ??_WDT_Initialize 0070                        _PORTAbits 000C                        _PORTBbits 000D  
                      _PORTCbits 000E                 __CFG_FOSC$INTOSC 0000            __size_of_EUSART_Write 0008  
      __end_of_EUSART_Initialize 06AC                       main@master 0020                       main@msg_up 0030  
                   _EUSART_Write 068F           ?_OSCILLATOR_Initialize 0070              start_initialization 07FD  
__size_of_PIN_MANAGER_Initialize 001A                    ??_EUSART_Read 0070                        ___latbits 0001  
                  __pcstackBANK0 0020       __size_of_EUSART_Initialize 000B              __end_of_EUSART_Read 06A1  
         _PIN_MANAGER_Initialize 06B8                         _LATCbits 010E                         _PIR1bits 0011  
                      main@K_DWN 0025                        main@K_LFT 0027                      _EUSART_Read 0697  
        ??_OSCILLATOR_Initialize 0070                    __size_of_main 012B                         main@K_UP 0029  
        __size_of_WDT_Initialize 0004          ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000  
             EUSART_Write@txData 0070   __end_of_PIN_MANAGER_Initialize 06D2                      main@K_EXTRA 0023  
                    main@K_RIGHT 002B  

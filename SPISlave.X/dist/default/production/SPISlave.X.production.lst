

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed May 02 17:07:05 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35  0000                     
    36                           ; Version 1.41
    37                           ; Generated 25/01/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F25K80 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	idataCOMRAM
    72  001402                     __pidataCOMRAM:
    73                           	opt stack 0
    74                           
    75                           ;initializer for _MY_BUFFER_SIZE
    76  001402  0100               	dw	256
    77                           
    78                           ;initializer for _writeDummy
    79  001404  55                 	db	85
    80                           
    81                           ;initializer for _BBB_INIT
    82  001405  01                 	db	1
    83                           
    84                           	psect	nvCOMRAM
    85  000059                     __pnvCOMRAM:
    86                           	opt stack 0
    87  000059                     _timer1ReloadVal:
    88                           	opt stack 0
    89  000059                     	ds	2
    90  0000                     _WPUB	set	3931
    91  0000                     _ANCON1	set	3932
    92  0000                     _ANCON0	set	3933
    93  0000                     _LATBbits	set	3978
    94  0000                     _T1GCONbits	set	4010
    95  0000                     _T1CONbits	set	4045
    96  0000                     _T1CON	set	4045
    97  0000                     _TMR1L	set	4046
    98  0000                     _TMR1H	set	4047
    99  0000                     _T1GCON	set	4010
   100  0000                     _TXREG1	set	4013
   101  0000                     _RCREG1	set	4014
   102  0000                     _RCSTA1bits	set	4011
   103  0000                     _PIR1bits	set	3998
   104  0000                     _SPBRGH1	set	3965
   105  0000                     _SPBRG1	set	4015
   106  0000                     _TXSTA1	set	4012
   107  0000                     _RCSTA1	set	4011
   108  0000                     _BAUDCON1	set	4007
   109  0000                     _REFOCON	set	3994
   110  0000                     _OSCTUNE	set	3995
   111  0000                     _OSCCON2	set	4050
   112  0000                     _OSCCON	set	4051
   113  0000                     _INTCON2bits	set	4081
   114  0000                     _TRISC	set	3988
   115  0000                     _TRISB	set	3987
   116  0000                     _TRISA	set	3986
   117  0000                     _LATC	set	3979
   118  0000                     _LATB	set	3978
   119  0000                     _LATA	set	3977
   120  0000                     _SSPSTATbits	set	4039
   121  0000                     _SSPCON1bits	set	4038
   122  0000                     _SSPBUF	set	4041
   123  0000                     _SSPCON1	set	4038
   124  0000                     _SSPSTAT	set	4039
   125                           
   126                           	psect	smallconst
   127  000F00                     __psmallconst:
   128                           	opt stack 0
   129  000F00  00                 	db	0
   130  000F01                     STR_1:
   131  000F01  69                 	db	105	;'i'
   132  000F02  6E                 	db	110	;'n'
   133  000F03  74                 	db	116	;'t'
   134  000F04  69                 	db	105	;'i'
   135  000F05  61                 	db	97	;'a'
   136  000F06  6C                 	db	108	;'l'
   137  000F07  69                 	db	105	;'i'
   138  000F08  73                 	db	115	;'s'
   139  000F09  61                 	db	97	;'a'
   140  000F0A  74                 	db	116	;'t'
   141  000F0B  69                 	db	105	;'i'
   142  000F0C  6F                 	db	111	;'o'
   143  000F0D  6E                 	db	110	;'n'
   144  000F0E  20                 	db	32
   145  000F0F  63                 	db	99	;'c'
   146  000F10  6F                 	db	111	;'o'
   147  000F11  6D                 	db	109	;'m'
   148  000F12  70                 	db	112	;'p'
   149  000F13  6C                 	db	108	;'l'
   150  000F14  65                 	db	101	;'e'
   151  000F15  74                 	db	116	;'t'
   152  000F16  65                 	db	101	;'e'
   153  000F17  0A                 	db	10
   154  000F18  0D                 	db	13
   155  000F19  00                 	db	0
   156                           
   157                           ; #config settings
   158  000F1A  00                 	db	0	; dummy byte at the end
   159  0000                     
   160                           	psect	cinit
   161  001232                     __pcinit:
   162                           	opt stack 0
   163  001232                     start_initialization:
   164                           	opt stack 0
   165  001232                     __initialization:
   166                           	opt stack 0
   167                           
   168                           ; Initialize objects allocated to COMRAM (4 bytes)
   169                           ; load TBLPTR registers with __pidataCOMRAM
   170  001232  0E02               	movlw	low __pidataCOMRAM
   171  001234  6EF6               	movwf	tblptrl,c
   172  001236  0E14               	movlw	high __pidataCOMRAM
   173  001238  6EF7               	movwf	tblptrh,c
   174  00123A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   175  00123C  6EF8               	movwf	tblptru,c
   176  00123E  EE00  F055         	lfsr	0,__pdataCOMRAM
   177  001242  EE10 F004          	lfsr	1,4
   178  001246                     copy_data0:
   179  001246  0009               	tblrd		*+
   180  001248  CFF5 FFEE          	movff	tablat,postinc0
   181  00124C  50E5               	movf	postdec1,w,c
   182  00124E  50E1               	movf	fsr1l,w,c
   183  001250  E1FA               	bnz	copy_data0
   184                           
   185                           ; Clear objects allocated to COMRAM (64 bytes)
   186  001252  EE00  F001         	lfsr	0,__pbssCOMRAM
   187  001256  0E40               	movlw	64
   188  001258                     clear_0:
   189  001258  6AEE               	clrf	postinc0,c
   190  00125A  06E8               	decf	wreg,f,c
   191  00125C  E1FD               	bnz	clear_0
   192  00125E                     end_of_initialization:
   193                           	opt stack 0
   194  00125E                     __end_of__initialization:
   195                           	opt stack 0
   196  00125E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   197  001260  6EF8               	movwf	tblptru,c
   198  001262  0E0F               	movlw	high __Lsmallconst
   199  001264  6EF7               	movwf	tblptrh,c
   200  001266  0100               	movlb	0
   201  001268  EF4D  F009         	goto	_main	;jump to C main() function
   202                           tblptru	equ	0xFF8
   203                           tblptrh	equ	0xFF7
   204                           tblptrl	equ	0xFF6
   205                           tablat	equ	0xFF5
   206                           postinc0	equ	0xFEE
   207                           wreg	equ	0xFE8
   208                           postdec1	equ	0xFE5
   209                           fsr1l	equ	0xFE1
   210                           
   211                           	psect	bssCOMRAM
   212  000001                     __pbssCOMRAM:
   213                           	opt stack 0
   214  000001                     _readData:
   215                           	opt stack 0
   216  000001                     	ds	60
   217  00003D                     _i:
   218                           	opt stack 0
   219  00003D                     	ds	1
   220  00003E                     _readDummy:
   221                           	opt stack 0
   222  00003E                     	ds	1
   223  00003F                     _turn:
   224                           	opt stack 0
   225  00003F                     	ds	1
   226  000040                     _total:
   227                           	opt stack 0
   228  000040                     	ds	1
   229                           tblptru	equ	0xFF8
   230                           tblptrh	equ	0xFF7
   231                           tblptrl	equ	0xFF6
   232                           tablat	equ	0xFF5
   233                           postinc0	equ	0xFEE
   234                           wreg	equ	0xFE8
   235                           postdec1	equ	0xFE5
   236                           fsr1l	equ	0xFE1
   237                           
   238                           	psect	dataCOMRAM
   239  000055                     __pdataCOMRAM:
   240                           	opt stack 0
   241  000055                     _MY_BUFFER_SIZE:
   242                           	opt stack 0
   243  000055                     	ds	2
   244  000057                     _writeDummy:
   245                           	opt stack 0
   246  000057                     	ds	1
   247  000058                     _BBB_INIT:
   248                           	opt stack 0
   249  000058                     	ds	1
   250                           tblptru	equ	0xFF8
   251                           tblptrh	equ	0xFF7
   252                           tblptrl	equ	0xFF6
   253                           tablat	equ	0xFF5
   254                           postinc0	equ	0xFEE
   255                           wreg	equ	0xFE8
   256                           postdec1	equ	0xFE5
   257                           fsr1l	equ	0xFE1
   258                           
   259                           	psect	cstackCOMRAM
   260  000041                     __pcstackCOMRAM:
   261                           	opt stack 0
   262  000041                     ??_TMR1_Initialize:
   263  000041                     ?_TMR1_ReadTimer:
   264                           	opt stack 0
   265  000041                     SPI_Exchange8bit@dummyRead:
   266                           	opt stack 0
   267  000041                     EUSART1_Write@txData:
   268                           	opt stack 0
   269  000041                     TMR1_WriteTimer@timerVal:
   270                           	opt stack 0
   271  000041                     identify@adress:
   272                           	opt stack 0
   273                           
   274                           ; 2 bytes @ 0x0
   275  000041                     	ds	1
   276  000042                     SPI_Exchange8bit@data:
   277                           	opt stack 0
   278  000042                     putch@txData:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0x1
   282  000042                     	ds	1
   283  000043                     ??_identify:
   284  000043                     ??_TMR1_ReadTimer:
   285  000043                     ?_printf:
   286                           	opt stack 0
   287  000043                     ?_receiving:
   288                           	opt stack 0
   289  000043                     key_locking@master:
   290                           	opt stack 0
   291  000043                     printf@f:
   292                           	opt stack 0
   293                           
   294                           ; 2 bytes @ 0x2
   295  000043                     	ds	1
   296  000044                     ??_BBB_broadcast:
   297  000044                     transmit@dest:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0x3
   301  000044                     	ds	1
   302  000045                     ??_receiving:
   303  000045                     TMR1_ReadTimer@readVal:
   304                           	opt stack 0
   305  000045                     key_locking@slave:
   306                           	opt stack 0
   307  000045                     printf@ap:
   308                           	opt stack 0
   309                           
   310                           ; 2 bytes @ 0x4
   311  000045                     	ds	1
   312  000046                     ??_transmit:
   313                           
   314                           ; 1 bytes @ 0x5
   315  000046                     	ds	1
   316  000047                     ??_key_locking:
   317  000047                     TMR1_ReadTimer@readValHigh:
   318                           	opt stack 0
   319  000047                     printf@c:
   320                           	opt stack 0
   321  000047                     BBB_broadcast@TrueLenght:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0x6
   325  000047                     	ds	1
   326  000048                     TMR1_ReadTimer@readValLow:
   327                           	opt stack 0
   328  000048                     key_locking@master_lock:
   329                           	opt stack 0
   330                           
   331                           ; 2 bytes @ 0x7
   332  000048                     	ds	1
   333  000049                     transmit@TrueLenght:
   334                           	opt stack 0
   335                           
   336                           ; 2 bytes @ 0x8
   337  000049                     	ds	2
   338  00004B                     BBB_turn_player@dest:
   339                           	opt stack 0
   340                           
   341                           ; 2 bytes @ 0xA
   342  00004B                     	ds	2
   343  00004D                     routine_talk@adress:
   344                           	opt stack 0
   345                           
   346                           ; 2 bytes @ 0xC
   347  00004D                     	ds	2
   348  00004F                     routine_talk@ReadTimer:
   349                           	opt stack 0
   350                           
   351                           ; 2 bytes @ 0xE
   352  00004F                     	ds	2
   353  000051                     routine_talk@time_up:
   354                           	opt stack 0
   355                           
   356                           ; 1 bytes @ 0x10
   357  000051                     	ds	1
   358  000052                     routine_talk@lock:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0x11
   362  000052                     	ds	1
   363  000053                     routine_talk@type:
   364                           	opt stack 0
   365                           
   366                           ; 2 bytes @ 0x12
   367  000053                     	ds	2
   368  000055                     tblptru	equ	0xFF8
   369                           tblptrh	equ	0xFF7
   370                           tblptrl	equ	0xFF6
   371                           tablat	equ	0xFF5
   372                           postinc0	equ	0xFEE
   373                           wreg	equ	0xFE8
   374                           postdec1	equ	0xFE5
   375                           fsr1l	equ	0xFE1
   376                           
   377                           ; 1 bytes @ 0x14
   378 ;;
   379 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   380 ;;
   381 ;; *************** function _main *****************
   382 ;; Defined at:
   383 ;;		line 50 in file "main.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   401 ;;Total ram usage:        0 bytes
   402 ;; Hardware stack levels required when called:    4
   403 ;; This function calls:
   404 ;;		_SPI_Initialize
   405 ;;		_SYSTEM_Initialize
   406 ;;		_TMR1_StartTimer
   407 ;;		_printf
   408 ;;		_routine_talk
   409 ;; This function is called by:
   410 ;;		Startup code after reset
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           	psect	text0
   415  00129A                     __ptext0:
   416                           	opt stack 0
   417  00129A                     _main:
   418                           	opt stack 27
   419                           
   420                           ;main.c: 53: SYSTEM_Initialize();
   421                           
   422                           ;incstack = 0
   423  00129A  ECC8  F009         	call	_SYSTEM_Initialize	;wreg free
   424                           
   425                           ;main.c: 54: SPI_Initialize();
   426  00129E  ECFC  F009         	call	_SPI_Initialize	;wreg free
   427                           
   428                           ;main.c: 55: printf("intialisation complete\n\r");
   429  0012A2  0E01               	movlw	low STR_1
   430  0012A4  6E43               	movwf	printf@f,c
   431  0012A6  0E0F               	movlw	high STR_1
   432  0012A8  6E44               	movwf	printf@f+1,c
   433  0012AA  EC62  F009         	call	_printf	;wreg free
   434                           
   435                           ;main.c: 56: total = 0;
   436  0012AE  0E00               	movlw	0
   437  0012B0  6E40               	movwf	_total,c
   438                           
   439                           ;main.c: 57: TMR1_StartTimer();
   440  0012B2  EC03  F00A         	call	_TMR1_StartTimer	;wreg free
   441  0012B6                     l1420:
   442                           
   443                           ;main.c: 68: routine_talk(0xA1);
   444  0012B6  0E00               	movlw	0
   445  0012B8  6E4E               	movwf	routine_talk@adress+1,c
   446  0012BA  0EA1               	movlw	161
   447  0012BC  6E4D               	movwf	routine_talk@adress,c
   448  0012BE  EC21  F008         	call	_routine_talk	;wreg free
   449  0012C2  D7F9               	goto	l1420
   450  0012C4                     __end_of_main:
   451                           	opt stack 0
   452                           tblptru	equ	0xFF8
   453                           tblptrh	equ	0xFF7
   454                           tblptrl	equ	0xFF6
   455                           tablat	equ	0xFF5
   456                           postinc0	equ	0xFEE
   457                           wreg	equ	0xFE8
   458                           postdec1	equ	0xFE5
   459                           fsr1l	equ	0xFE1
   460                           
   461 ;; *************** function _routine_talk *****************
   462 ;; Defined at:
   463 ;;		line 153 in file "main.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;  adress          2   12[COMRAM] int 
   466 ;; Auto vars:     Size  Location     Type
   467 ;;  ReadTimer       2   14[COMRAM] int 
   468 ;;  type            2   18[COMRAM] int 
   469 ;;  lock            1   17[COMRAM] unsigned char 
   470 ;;  time_up         1   16[COMRAM] unsigned char 
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   481 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   483 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   484 ;;Total ram usage:        8 bytes
   485 ;; Hardware stack levels used:    1
   486 ;; Hardware stack levels required when called:    3
   487 ;; This function calls:
   488 ;;		_BBB_broadcast
   489 ;;		_BBB_turn_player
   490 ;;		_TMR1_ReadTimer
   491 ;;		_TMR1_WriteTimer
   492 ;;		_identify
   493 ;;		_key_locking
   494 ;;		_receiving
   495 ;;		_transmit
   496 ;; This function is called by:
   497 ;;		_main
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           	psect	text1
   502  001042                     __ptext1:
   503                           	opt stack 0
   504  001042                     _routine_talk:
   505                           	opt stack 27
   506                           
   507                           ;main.c: 154: bool lock=0;
   508                           
   509                           ;incstack = 0
   510  001042  0E00               	movlw	0
   511  001044  6E52               	movwf	routine_talk@lock,c
   512                           
   513                           ;main.c: 155: int type;
   514                           ;main.c: 156: bool time_up=0;
   515  001046  0E00               	movlw	0
   516  001048  6E51               	movwf	routine_talk@time_up,c
   517                           
   518                           ;main.c: 157: TMR1_WriteTimer(0);
   519  00104A  0E00               	movlw	0
   520  00104C  6E42               	movwf	TMR1_WriteTimer@timerVal+1,c
   521  00104E  0E00               	movlw	0
   522  001050  6E41               	movwf	TMR1_WriteTimer@timerVal,c
   523  001052  ECAD  F009         	call	_TMR1_WriteTimer	;wreg free
   524                           
   525                           ;main.c: 158: identify(adress);
   526  001056  C04D  F041         	movff	routine_talk@adress,identify@adress
   527  00105A  C04E  F042         	movff	routine_talk@adress+1,identify@adress+1
   528  00105E  ECF1  F008         	call	_identify	;wreg free
   529                           
   530                           ;main.c: 159: while(time_up==0){
   531  001062  D060               	goto	l1406
   532  001064                     l1370:
   533                           
   534                           ;main.c: 160: int ReadTimer=TMR1_ReadTimer();
   535  001064  EC9E  F009         	call	_TMR1_ReadTimer	;wreg free
   536  001068  C041  F04F         	movff	?_TMR1_ReadTimer,routine_talk@ReadTimer
   537  00106C  C042  F050         	movff	?_TMR1_ReadTimer+1,routine_talk@ReadTimer+1
   538                           
   539                           ;main.c: 161: if(ReadTimer>=11500){
   540  001070  BE50               	btfsc	routine_talk@ReadTimer+1,7,c
   541  001072  D008               	goto	l1376
   542  001074  0EEC               	movlw	236
   543  001076  5C4F               	subwf	routine_talk@ReadTimer,w,c
   544  001078  0E2C               	movlw	44
   545  00107A  5850               	subwfb	routine_talk@ReadTimer+1,w,c
   546  00107C  A0D8               	btfss	status,0,c
   547  00107E  D002               	goto	l1376
   548                           
   549                           ;main.c: 162: time_up=1;
   550  001080  0E01               	movlw	1
   551  001082  6E51               	movwf	routine_talk@time_up,c
   552  001084                     l1376:
   553                           
   554                           ;main.c: 163: }
   555                           ;main.c: 164: lock=key_locking(0x60,0x06);
   556  001084  0E00               	movlw	0
   557  001086  6E44               	movwf	key_locking@master+1,c
   558  001088  0E60               	movlw	96
   559  00108A  6E43               	movwf	key_locking@master,c
   560  00108C  0E00               	movlw	0
   561  00108E  6E46               	movwf	key_locking@slave+1,c
   562  001090  0E06               	movlw	6
   563  001092  6E45               	movwf	key_locking@slave,c
   564  001094  EC8C  F009         	call	_key_locking	;wreg free
   565  001098  6E52               	movwf	routine_talk@lock,c
   566                           
   567                           ;main.c: 165: if(lock==1){
   568  00109A  0452               	decf	routine_talk@lock,w,c
   569  00109C  A4D8               	btfss	status,2,c
   570  00109E  D042               	goto	l1406
   571                           
   572                           ;main.c: 166: lock=0;
   573  0010A0  0E00               	movlw	0
   574  0010A2  6E52               	movwf	routine_talk@lock,c
   575                           
   576                           ;main.c: 167: type=receiving();
   577  0010A4  EC96  F008         	call	_receiving	;wreg free
   578  0010A8  C043  F053         	movff	?_receiving,routine_talk@type
   579  0010AC  C044  F054         	movff	?_receiving+1,routine_talk@type+1
   580                           
   581                           ;main.c: 168: if(type == 0xEE){
   582  0010B0  0EEE               	movlw	238
   583  0010B2  1853               	xorwf	routine_talk@type,w,c
   584  0010B4  1054               	iorwf	routine_talk@type+1,w,c
   585  0010B6  B4D8               	btfsc	status,2,c
   586  0010B8  D00C               	goto	l1390
   587  0010BA  D014               	goto	l1394
   588  0010BC                     l1388:
   589  0010BC  0E00               	movlw	0
   590  0010BE  6E44               	movwf	key_locking@master+1,c
   591  0010C0  0E6F               	movlw	111
   592  0010C2  6E43               	movwf	key_locking@master,c
   593  0010C4  0E00               	movlw	0
   594  0010C6  6E46               	movwf	key_locking@slave+1,c
   595  0010C8  0EA6               	movlw	166
   596  0010CA  6E45               	movwf	key_locking@slave,c
   597  0010CC  EC8C  F009         	call	_key_locking	;wreg free
   598  0010D0  6E52               	movwf	routine_talk@lock,c
   599  0010D2                     l1390:
   600  0010D2  5052               	movf	routine_talk@lock,w,c
   601  0010D4  B4D8               	btfsc	status,2,c
   602  0010D6  D7F2               	goto	l1388
   603                           
   604                           ;main.c: 170: transmit(readData[1]);
   605  0010D8  C002  F044         	movff	_readData+1,transmit@dest
   606  0010DC  6A45               	clrf	transmit@dest+1,c
   607  0010DE  ECC7  F008         	call	_transmit	;wreg free
   608                           
   609                           ;main.c: 172: } else if(type == 0xDD){
   610  0010E2  D020               	goto	l1406
   611  0010E4                     l1394:
   612  0010E4  0EDD               	movlw	221
   613  0010E6  1853               	xorwf	routine_talk@type,w,c
   614  0010E8  1054               	iorwf	routine_talk@type+1,w,c
   615  0010EA  A4D8               	btfss	status,2,c
   616  0010EC  D007               	goto	l1398
   617                           
   618                           ;main.c: 173: transmit(0xA6);
   619  0010EE  0E00               	movlw	0
   620  0010F0  6E45               	movwf	transmit@dest+1,c
   621  0010F2  0EA6               	movlw	166
   622  0010F4  6E44               	movwf	transmit@dest,c
   623  0010F6  ECC7  F008         	call	_transmit	;wreg free
   624                           
   625                           ;main.c: 174: } else if(type == 0xCC){
   626  0010FA  D014               	goto	l1406
   627  0010FC                     l1398:
   628  0010FC  0ECC               	movlw	204
   629  0010FE  1853               	xorwf	routine_talk@type,w,c
   630  001100  1054               	iorwf	routine_talk@type+1,w,c
   631  001102  A4D8               	btfss	status,2,c
   632  001104  D003               	goto	l1402
   633                           
   634                           ;main.c: 175: BBB_broadcast();
   635  001106  EC8E  F007         	call	_BBB_broadcast	;wreg free
   636                           
   637                           ;main.c: 176: } else if(type == 0xBB){
   638  00110A  D00C               	goto	l1406
   639  00110C                     l1402:
   640  00110C  0EBB               	movlw	187
   641  00110E  1853               	xorwf	routine_talk@type,w,c
   642  001110  1054               	iorwf	routine_talk@type+1,w,c
   643  001112  A4D8               	btfss	status,2,c
   644  001114  D007               	goto	l1406
   645                           
   646                           ;main.c: 177: BBB_turn_player(readData[1]);
   647  001116  C002  F04B         	movff	_readData+1,BBB_turn_player@dest
   648  00111A  6A4C               	clrf	BBB_turn_player@dest+1,c
   649  00111C  ECBB  F009         	call	_BBB_turn_player	;wreg free
   650                           
   651                           ;main.c: 178: BBB_broadcast();
   652  001120  EC8E  F007         	call	_BBB_broadcast	;wreg free
   653  001124                     l1406:
   654  001124  5051               	movf	routine_talk@time_up,w,c
   655  001126  A4D8               	btfss	status,2,c
   656  001128  0012               	return	
   657  00112A  D79C               	goto	l1370
   658  00112C                     __end_of_routine_talk:
   659                           	opt stack 0
   660                           tblptru	equ	0xFF8
   661                           tblptrh	equ	0xFF7
   662                           tblptrl	equ	0xFF6
   663                           tablat	equ	0xFF5
   664                           postinc0	equ	0xFEE
   665                           wreg	equ	0xFE8
   666                           postdec1	equ	0xFE5
   667                           fsr1l	equ	0xFE1
   668                           status	equ	0xFD8
   669                           
   670 ;; *************** function _receiving *****************
   671 ;; Defined at:
   672 ;;		line 85 in file "main.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;                  2    2[COMRAM] int 
   679 ;; Registers used:
   680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   688 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   689 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   690 ;;Total ram usage:        4 bytes
   691 ;; Hardware stack levels used:    1
   692 ;; Hardware stack levels required when called:    1
   693 ;; This function calls:
   694 ;;		_SPI_Exchange8bit
   695 ;; This function is called by:
   696 ;;		_routine_talk
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text2
   701  00112C                     __ptext2:
   702                           	opt stack 0
   703  00112C                     _receiving:
   704                           	opt stack 28
   705                           
   706                           ;main.c: 86: for(i=0;i<4;i++){
   707                           
   708                           ;incstack = 0
   709  00112C  0E00               	movlw	0
   710  00112E  6E3D               	movwf	_i,c
   711  001130                     l1294:
   712  001130  0E03               	movlw	3
   713  001132  643D               	cpfsgt	_i,c
   714  001134  D001               	goto	l1298
   715  001136  D00E               	goto	l1304
   716  001138                     l1298:
   717                           
   718                           ;main.c: 87: readData[i]=SPI_Exchange8bit(0x55);
   719  001138  503D               	movf	_i,w,c
   720  00113A  0D01               	mullw	1
   721  00113C  0E01               	movlw	low _readData
   722  00113E  24F3               	addwf	prodl,w,c
   723  001140  6ED9               	movwf	fsr2l,c
   724  001142  0E00               	movlw	high _readData
   725  001144  20F4               	addwfc	prodh,w,c
   726  001146  6EDA               	movwf	fsr2h,c
   727  001148  0E55               	movlw	85
   728  00114A  ECDE  F009         	call	_SPI_Exchange8bit
   729  00114E  6EDF               	movwf	indf2,c
   730  001150  2A3D               	incf	_i,f,c
   731  001152  D7EE               	goto	l1294
   732  001154                     l1304:
   733                           
   734                           ;main.c: 88: }
   735                           ;main.c: 89: for(i=0;i<readData[3];i++){
   736  001154  0E00               	movlw	0
   737  001156  6E3D               	movwf	_i,c
   738  001158  D012               	goto	l1310
   739  00115A                     l1306:
   740                           
   741                           ;main.c: 90: readData[i+4]=SPI_Exchange8bit(0x55);
   742  00115A  503D               	movf	_i,w,c
   743  00115C  6E45               	movwf	??_receiving& (0+255),c
   744  00115E  6A46               	clrf	(??_receiving+1)& (0+255),c
   745  001160  0E04               	movlw	4
   746  001162  2645               	addwf	??_receiving,f,c
   747  001164  0E00               	movlw	0
   748  001166  2246               	addwfc	??_receiving+1,f,c
   749  001168  0E01               	movlw	low _readData
   750  00116A  2445               	addwf	??_receiving,w,c
   751  00116C  6ED9               	movwf	fsr2l,c
   752  00116E  0E00               	movlw	high _readData
   753  001170  2046               	addwfc	??_receiving+1,w,c
   754  001172  6EDA               	movwf	fsr2h,c
   755  001174  0E55               	movlw	85
   756  001176  ECDE  F009         	call	_SPI_Exchange8bit
   757  00117A  6EDF               	movwf	indf2,c
   758  00117C  2A3D               	incf	_i,f,c
   759  00117E                     l1310:
   760  00117E  5004               	movf	_readData+3,w,c
   761  001180  5C3D               	subwf	_i,w,c
   762  001182  A0D8               	btfss	status,0,c
   763  001184  D7EA               	goto	l1306
   764                           
   765                           ;main.c: 91: }
   766                           ;main.c: 97: return (readData[2]);
   767  001186  C003  F043         	movff	_readData+2,?_receiving
   768  00118A  6A44               	clrf	?_receiving+1,c
   769  00118C  0012               	return		;funcret
   770  00118E                     __end_of_receiving:
   771                           	opt stack 0
   772                           tblptru	equ	0xFF8
   773                           tblptrh	equ	0xFF7
   774                           tblptrl	equ	0xFF6
   775                           tablat	equ	0xFF5
   776                           prodh	equ	0xFF4
   777                           prodl	equ	0xFF3
   778                           postinc0	equ	0xFEE
   779                           wreg	equ	0xFE8
   780                           postdec1	equ	0xFE5
   781                           fsr1l	equ	0xFE1
   782                           indf2	equ	0xFDF
   783                           fsr2h	equ	0xFDA
   784                           fsr2l	equ	0xFD9
   785                           status	equ	0xFD8
   786                           
   787 ;; *************** function _key_locking *****************
   788 ;; Defined at:
   789 ;;		line 76 in file "main.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;  master          2    2[COMRAM] int 
   792 ;;  slave           2    4[COMRAM] int 
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  master_lock     2    7[COMRAM] int 
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      unsigned char 
   797 ;; Registers used:
   798 ;;		wreg, status,2, status,0, cstack
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   804 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   805 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   806 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   807 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   808 ;;Total ram usage:        7 bytes
   809 ;; Hardware stack levels used:    1
   810 ;; Hardware stack levels required when called:    1
   811 ;; This function calls:
   812 ;;		_SPI_Exchange8bit
   813 ;; This function is called by:
   814 ;;		_routine_talk
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           	psect	text3
   819  001318                     __ptext3:
   820                           	opt stack 0
   821  001318                     _key_locking:
   822                           	opt stack 28
   823                           
   824                           ;main.c: 77: int master_lock = SPI_Exchange8bit(slave);
   825                           
   826                           ;incstack = 0
   827  001318  5045               	movf	key_locking@slave,w,c
   828  00131A  ECDE  F009         	call	_SPI_Exchange8bit
   829  00131E  6E47               	movwf	??_key_locking& (0+255),c
   830  001320  5047               	movf	??_key_locking,w,c
   831  001322  6E48               	movwf	key_locking@master_lock,c
   832  001324  6A49               	clrf	key_locking@master_lock+1,c
   833                           
   834                           ;main.c: 78: if (master_lock == master){
   835  001326  5043               	movf	key_locking@master,w,c
   836  001328  1848               	xorwf	key_locking@master_lock,w,c
   837  00132A  E106               	bnz	l1288
   838  00132C  5044               	movf	key_locking@master+1,w,c
   839  00132E  1849               	xorwf	key_locking@master_lock+1,w,c
   840  001330  A4D8               	btfss	status,2,c
   841  001332  D002               	goto	l1288
   842                           
   843                           ;main.c: 79: return 1;
   844  001334  0E01               	movlw	1
   845                           
   846                           ;main.c: 80: } else{
   847  001336  0012               	return	
   848  001338                     l1288:
   849                           
   850                           ;main.c: 81: return 0;
   851  001338  0E00               	movlw	0
   852  00133A  0012               	return	
   853  00133C                     __end_of_key_locking:
   854                           	opt stack 0
   855                           tblptru	equ	0xFF8
   856                           tblptrh	equ	0xFF7
   857                           tblptrl	equ	0xFF6
   858                           tablat	equ	0xFF5
   859                           prodh	equ	0xFF4
   860                           prodl	equ	0xFF3
   861                           postinc0	equ	0xFEE
   862                           wreg	equ	0xFE8
   863                           postdec1	equ	0xFE5
   864                           fsr1l	equ	0xFE1
   865                           indf2	equ	0xFDF
   866                           fsr2h	equ	0xFDA
   867                           fsr2l	equ	0xFD9
   868                           status	equ	0xFD8
   869                           
   870 ;; *************** function _TMR1_WriteTimer *****************
   871 ;; Defined at:
   872 ;;		line 112 in file "mcc_generated_files/tmr1.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;  timerVal        2    0[COMRAM] unsigned int 
   875 ;; Auto vars:     Size  Location     Type
   876 ;;		None
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg, status,2
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   886 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   889 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   890 ;;Total ram usage:        2 bytes
   891 ;; Hardware stack levels used:    1
   892 ;; This function calls:
   893 ;;		Nothing
   894 ;; This function is called by:
   895 ;;		_routine_talk
   896 ;;		_TMR1_Reload
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           	psect	text4
   901  00135A                     __ptext4:
   902                           	opt stack 0
   903  00135A                     _TMR1_WriteTimer:
   904                           	opt stack 29
   905                           
   906                           ;tmr1.c: 114: if (T1CONbits.nT1SYNC == 1)
   907                           
   908                           ;incstack = 0
   909  00135A  A4CD               	btfss	4045,2,c	;volatile
   910  00135C  D007               	goto	l1274
   911                           
   912                           ;tmr1.c: 115: {
   913                           ;tmr1.c: 117: T1CONbits.TMR1ON = 0;
   914  00135E  90CD               	bcf	4045,0,c	;volatile
   915                           
   916                           ;tmr1.c: 120: TMR1H = (timerVal >> 8);
   917  001360  5042               	movf	TMR1_WriteTimer@timerVal+1,w,c
   918  001362  6ECF               	movwf	4047,c	;volatile
   919                           
   920                           ;tmr1.c: 121: TMR1L = timerVal;
   921  001364  C041  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
   922                           
   923                           ;tmr1.c: 124: T1CONbits.TMR1ON =1;
   924  001368  80CD               	bsf	4045,0,c	;volatile
   925                           
   926                           ;tmr1.c: 125: }
   927  00136A  0012               	return	
   928  00136C                     l1274:
   929                           
   930                           ;tmr1.c: 126: else
   931                           ;tmr1.c: 127: {
   932                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
   933  00136C  5042               	movf	TMR1_WriteTimer@timerVal+1,w,c
   934  00136E  6ECF               	movwf	4047,c	;volatile
   935                           
   936                           ;tmr1.c: 130: TMR1L = timerVal;
   937  001370  C041  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
   938  001374  0012               	return	
   939  001376                     __end_of_TMR1_WriteTimer:
   940                           	opt stack 0
   941                           tblptru	equ	0xFF8
   942                           tblptrh	equ	0xFF7
   943                           tblptrl	equ	0xFF6
   944                           tablat	equ	0xFF5
   945                           prodh	equ	0xFF4
   946                           prodl	equ	0xFF3
   947                           postinc0	equ	0xFEE
   948                           wreg	equ	0xFE8
   949                           postdec1	equ	0xFE5
   950                           fsr1l	equ	0xFE1
   951                           indf2	equ	0xFDF
   952                           fsr2h	equ	0xFDA
   953                           fsr2l	equ	0xFD9
   954                           status	equ	0xFD8
   955                           
   956 ;; *************** function _TMR1_ReadTimer *****************
   957 ;; Defined at:
   958 ;;		line 97 in file "mcc_generated_files/tmr1.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;		None
   961 ;; Auto vars:     Size  Location     Type
   962 ;;  readVal         2    4[COMRAM] unsigned int 
   963 ;;  readValLow      1    7[COMRAM] unsigned char 
   964 ;;  readValHigh     1    6[COMRAM] unsigned char 
   965 ;; Return value:  Size  Location     Type
   966 ;;                  2    0[COMRAM] unsigned int 
   967 ;; Registers used:
   968 ;;		wreg, status,2
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   975 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   976 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   977 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   978 ;;Total ram usage:        8 bytes
   979 ;; Hardware stack levels used:    1
   980 ;; This function calls:
   981 ;;		Nothing
   982 ;; This function is called by:
   983 ;;		_routine_talk
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text5
   988  00133C                     __ptext5:
   989                           	opt stack 0
   990  00133C                     _TMR1_ReadTimer:
   991                           	opt stack 29
   992                           
   993                           ;tmr1.c: 99: uint16_t readVal;
   994                           ;tmr1.c: 100: uint8_t readValHigh;
   995                           ;tmr1.c: 101: uint8_t readValLow;
   996                           ;tmr1.c: 104: readValLow = TMR1L;
   997                           
   998                           ;incstack = 0
   999  00133C  CFCE F048          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
  1000                           
  1001                           ;tmr1.c: 105: readValHigh = TMR1H;
  1002  001340  CFCF F047          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
  1003                           
  1004                           ;tmr1.c: 107: readVal = ((uint16_t)readValHigh << 8) | readValLow;
  1005  001344  5047               	movf	TMR1_ReadTimer@readValHigh,w,c
  1006  001346  6E43               	movwf	??_TMR1_ReadTimer& (0+255),c
  1007  001348  5048               	movf	TMR1_ReadTimer@readValLow,w,c
  1008  00134A  6E45               	movwf	TMR1_ReadTimer@readVal,c
  1009  00134C  C043  F046         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
  1010                           
  1011                           ;tmr1.c: 109: return readVal;
  1012  001350  C045  F041         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
  1013  001354  C046  F042         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
  1014  001358  0012               	return	
  1015  00135A                     __end_of_TMR1_ReadTimer:
  1016                           	opt stack 0
  1017                           tblptru	equ	0xFF8
  1018                           tblptrh	equ	0xFF7
  1019                           tblptrl	equ	0xFF6
  1020                           tablat	equ	0xFF5
  1021                           prodh	equ	0xFF4
  1022                           prodl	equ	0xFF3
  1023                           postinc0	equ	0xFEE
  1024                           wreg	equ	0xFE8
  1025                           postdec1	equ	0xFE5
  1026                           fsr1l	equ	0xFE1
  1027                           indf2	equ	0xFDF
  1028                           fsr2h	equ	0xFDA
  1029                           fsr2l	equ	0xFD9
  1030                           status	equ	0xFD8
  1031                           
  1032 ;; *************** function _BBB_turn_player *****************
  1033 ;; Defined at:
  1034 ;;		line 134 in file "main.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;  dest            2   10[COMRAM] int 
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;		None
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1048 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1051 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1052 ;;Total ram usage:        2 bytes
  1053 ;; Hardware stack levels used:    1
  1054 ;; Hardware stack levels required when called:    2
  1055 ;; This function calls:
  1056 ;;		_identify
  1057 ;;		_transmit
  1058 ;; This function is called by:
  1059 ;;		_routine_talk
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           	psect	text6
  1064  001376                     __ptext6:
  1065                           	opt stack 0
  1066  001376                     _BBB_turn_player:
  1067                           	opt stack 27
  1068                           
  1069                           ;main.c: 135: identify(dest);
  1070                           
  1071                           ;incstack = 0
  1072  001376  C04B  F041         	movff	BBB_turn_player@dest,identify@adress
  1073  00137A  C04C  F042         	movff	BBB_turn_player@dest+1,identify@adress+1
  1074  00137E  ECF1  F008         	call	_identify	;wreg free
  1075                           
  1076                           ;main.c: 136: transmit(dest);
  1077  001382  C04B  F044         	movff	BBB_turn_player@dest,transmit@dest
  1078  001386  C04C  F045         	movff	BBB_turn_player@dest+1,transmit@dest+1
  1079  00138A  ECC7  F008         	call	_transmit	;wreg free
  1080  00138E  0012               	return		;funcret
  1081  001390                     __end_of_BBB_turn_player:
  1082                           	opt stack 0
  1083                           tblptru	equ	0xFF8
  1084                           tblptrh	equ	0xFF7
  1085                           tblptrl	equ	0xFF6
  1086                           tablat	equ	0xFF5
  1087                           prodh	equ	0xFF4
  1088                           prodl	equ	0xFF3
  1089                           postinc0	equ	0xFEE
  1090                           wreg	equ	0xFE8
  1091                           postdec1	equ	0xFE5
  1092                           fsr1l	equ	0xFE1
  1093                           indf2	equ	0xFDF
  1094                           fsr2h	equ	0xFDA
  1095                           fsr2l	equ	0xFD9
  1096                           status	equ	0xFD8
  1097                           
  1098 ;; *************** function _transmit *****************
  1099 ;; Defined at:
  1100 ;;		line 100 in file "main.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;  dest            2    3[COMRAM] int 
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;  TrueLenght      2    8[COMRAM] int 
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      void 
  1107 ;; Registers used:
  1108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1114 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1115 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1116 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1117 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1118 ;;Total ram usage:        7 bytes
  1119 ;; Hardware stack levels used:    1
  1120 ;; Hardware stack levels required when called:    1
  1121 ;; This function calls:
  1122 ;;		_SPI_Exchange8bit
  1123 ;;		_identify
  1124 ;; This function is called by:
  1125 ;;		_BBB_turn_player
  1126 ;;		_routine_talk
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text7
  1131  00118E                     __ptext7:
  1132                           	opt stack 0
  1133  00118E                     _transmit:
  1134                           	opt stack 28
  1135                           
  1136                           ;main.c: 101: int TrueLenght;
  1137                           ;main.c: 102: identify(dest);
  1138                           
  1139                           ;incstack = 0
  1140  00118E  C044  F041         	movff	transmit@dest,identify@adress
  1141  001192  C045  F042         	movff	transmit@dest+1,identify@adress+1
  1142  001196  ECF1  F008         	call	_identify	;wreg free
  1143                           
  1144                           ;main.c: 103: TrueLenght=readData[3]+4;
  1145  00119A  0E04               	movlw	4
  1146  00119C  2404               	addwf	_readData+3,w,c
  1147  00119E  6E49               	movwf	transmit@TrueLenght,c
  1148  0011A0  6A4A               	clrf	transmit@TrueLenght+1,c
  1149  0011A2  0E00               	movlw	0
  1150  0011A4  224A               	addwfc	transmit@TrueLenght+1,f,c
  1151                           
  1152                           ;main.c: 104: for(i=0;i<TrueLenght;i++){
  1153  0011A6  0E00               	movlw	0
  1154  0011A8  6E3D               	movwf	_i,c
  1155  0011AA  D00D               	goto	l1254
  1156  0011AC                     l1250:
  1157                           
  1158                           ;main.c: 105: readDummy = SPI_Exchange8bit(readData[i]);
  1159  0011AC  503D               	movf	_i,w,c
  1160  0011AE  0D01               	mullw	1
  1161  0011B0  0E01               	movlw	low _readData
  1162  0011B2  24F3               	addwf	prodl,w,c
  1163  0011B4  6ED9               	movwf	fsr2l,c
  1164  0011B6  0E00               	movlw	high _readData
  1165  0011B8  20F4               	addwfc	prodh,w,c
  1166  0011BA  6EDA               	movwf	fsr2h,c
  1167  0011BC  50DF               	movf	indf2,w,c
  1168  0011BE  ECDE  F009         	call	_SPI_Exchange8bit
  1169  0011C2  6E3E               	movwf	_readDummy,c
  1170  0011C4  2A3D               	incf	_i,f,c
  1171  0011C6                     l1254:
  1172  0011C6  503D               	movf	_i,w,c
  1173  0011C8  6E46               	movwf	??_transmit& (0+255),c
  1174  0011CA  6A47               	clrf	(??_transmit+1)& (0+255),c
  1175  0011CC  5049               	movf	transmit@TrueLenght,w,c
  1176  0011CE  5C46               	subwf	??_transmit,w,c
  1177  0011D0  5047               	movf	??_transmit+1,w,c
  1178  0011D2  0A80               	xorlw	128
  1179  0011D4  6E48               	movwf	(??_transmit+2)& (0+255),c
  1180  0011D6  504A               	movf	transmit@TrueLenght+1,w,c
  1181  0011D8  0A80               	xorlw	128
  1182  0011DA  5848               	subwfb	(??_transmit+2)& (0+255),w,c
  1183  0011DC  B0D8               	btfsc	status,0,c
  1184  0011DE  0012               	return	
  1185  0011E0  D7E5               	goto	l1250
  1186  0011E2                     __end_of_transmit:
  1187                           	opt stack 0
  1188                           tblptru	equ	0xFF8
  1189                           tblptrh	equ	0xFF7
  1190                           tblptrl	equ	0xFF6
  1191                           tablat	equ	0xFF5
  1192                           prodh	equ	0xFF4
  1193                           prodl	equ	0xFF3
  1194                           postinc0	equ	0xFEE
  1195                           wreg	equ	0xFE8
  1196                           postdec1	equ	0xFE5
  1197                           fsr1l	equ	0xFE1
  1198                           indf2	equ	0xFDF
  1199                           fsr2h	equ	0xFDA
  1200                           fsr2l	equ	0xFD9
  1201                           status	equ	0xFD8
  1202                           
  1203 ;; *************** function _BBB_broadcast *****************
  1204 ;; Defined at:
  1205 ;;		line 113 in file "main.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;		None
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  TrueLenght      2    6[COMRAM] int 
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  1    wreg      void 
  1212 ;; Registers used:
  1213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1220 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1221 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1222 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1223 ;;Total ram usage:        5 bytes
  1224 ;; Hardware stack levels used:    1
  1225 ;; Hardware stack levels required when called:    1
  1226 ;; This function calls:
  1227 ;;		_SPI_Exchange8bit
  1228 ;;		_identify
  1229 ;; This function is called by:
  1230 ;;		_routine_talk
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text8
  1235  000F1C                     __ptext8:
  1236                           	opt stack 0
  1237  000F1C                     _BBB_broadcast:
  1238                           	opt stack 28
  1239                           
  1240                           ;main.c: 114: int TrueLenght;
  1241                           ;main.c: 115: TrueLenght=readData[3]+4;
  1242                           
  1243                           ;incstack = 0
  1244  000F1C  0E04               	movlw	4
  1245  000F1E  2404               	addwf	_readData+3,w,c
  1246  000F20  6E47               	movwf	BBB_broadcast@TrueLenght,c
  1247  000F22  6A48               	clrf	BBB_broadcast@TrueLenght+1,c
  1248  000F24  0E00               	movlw	0
  1249  000F26  2248               	addwfc	BBB_broadcast@TrueLenght+1,f,c
  1250                           
  1251                           ;main.c: 116: identify(0xA1);
  1252  000F28  0E00               	movlw	0
  1253  000F2A  6E42               	movwf	identify@adress+1,c
  1254  000F2C  0EA1               	movlw	161
  1255  000F2E  6E41               	movwf	identify@adress,c
  1256  000F30  ECF1  F008         	call	_identify	;wreg free
  1257                           
  1258                           ;main.c: 117: for(i=0;i<TrueLenght;i++){
  1259  000F34  0E00               	movlw	0
  1260  000F36  6E3D               	movwf	_i,c
  1261  000F38  D00D               	goto	l1322
  1262  000F3A                     l1318:
  1263                           
  1264                           ;main.c: 118: readDummy = SPI_Exchange8bit(readData[i]);
  1265  000F3A  503D               	movf	_i,w,c
  1266  000F3C  0D01               	mullw	1
  1267  000F3E  0E01               	movlw	low _readData
  1268  000F40  24F3               	addwf	prodl,w,c
  1269  000F42  6ED9               	movwf	fsr2l,c
  1270  000F44  0E00               	movlw	high _readData
  1271  000F46  20F4               	addwfc	prodh,w,c
  1272  000F48  6EDA               	movwf	fsr2h,c
  1273  000F4A  50DF               	movf	indf2,w,c
  1274  000F4C  ECDE  F009         	call	_SPI_Exchange8bit
  1275  000F50  6E3E               	movwf	_readDummy,c
  1276  000F52  2A3D               	incf	_i,f,c
  1277  000F54                     l1322:
  1278  000F54  503D               	movf	_i,w,c
  1279  000F56  6E44               	movwf	??_BBB_broadcast& (0+255),c
  1280  000F58  6A45               	clrf	(??_BBB_broadcast+1)& (0+255),c
  1281  000F5A  5047               	movf	BBB_broadcast@TrueLenght,w,c
  1282  000F5C  5C44               	subwf	??_BBB_broadcast,w,c
  1283  000F5E  5045               	movf	??_BBB_broadcast+1,w,c
  1284  000F60  0A80               	xorlw	128
  1285  000F62  6E46               	movwf	(??_BBB_broadcast+2)& (0+255),c
  1286  000F64  5048               	movf	BBB_broadcast@TrueLenght+1,w,c
  1287  000F66  0A80               	xorlw	128
  1288  000F68  5846               	subwfb	(??_BBB_broadcast+2)& (0+255),w,c
  1289  000F6A  A0D8               	btfss	status,0,c
  1290  000F6C  D7E6               	goto	l1318
  1291                           
  1292                           ;main.c: 119: }
  1293                           ;main.c: 120: identify(0xA2);
  1294  000F6E  0E00               	movlw	0
  1295  000F70  6E42               	movwf	identify@adress+1,c
  1296  000F72  0EA2               	movlw	162
  1297  000F74  6E41               	movwf	identify@adress,c
  1298  000F76  ECF1  F008         	call	_identify	;wreg free
  1299                           
  1300                           ;main.c: 121: for(i=0;i<TrueLenght;i++){
  1301  000F7A  0E00               	movlw	0
  1302  000F7C  6E3D               	movwf	_i,c
  1303  000F7E  D00D               	goto	l1332
  1304  000F80                     l1328:
  1305                           
  1306                           ;main.c: 122: readDummy = SPI_Exchange8bit(readData[i]);
  1307  000F80  503D               	movf	_i,w,c
  1308  000F82  0D01               	mullw	1
  1309  000F84  0E01               	movlw	low _readData
  1310  000F86  24F3               	addwf	prodl,w,c
  1311  000F88  6ED9               	movwf	fsr2l,c
  1312  000F8A  0E00               	movlw	high _readData
  1313  000F8C  20F4               	addwfc	prodh,w,c
  1314  000F8E  6EDA               	movwf	fsr2h,c
  1315  000F90  50DF               	movf	indf2,w,c
  1316  000F92  ECDE  F009         	call	_SPI_Exchange8bit
  1317  000F96  6E3E               	movwf	_readDummy,c
  1318  000F98  2A3D               	incf	_i,f,c
  1319  000F9A                     l1332:
  1320  000F9A  503D               	movf	_i,w,c
  1321  000F9C  6E44               	movwf	??_BBB_broadcast& (0+255),c
  1322  000F9E  6A45               	clrf	(??_BBB_broadcast+1)& (0+255),c
  1323  000FA0  5047               	movf	BBB_broadcast@TrueLenght,w,c
  1324  000FA2  5C44               	subwf	??_BBB_broadcast,w,c
  1325  000FA4  5045               	movf	??_BBB_broadcast+1,w,c
  1326  000FA6  0A80               	xorlw	128
  1327  000FA8  6E46               	movwf	(??_BBB_broadcast+2)& (0+255),c
  1328  000FAA  5048               	movf	BBB_broadcast@TrueLenght+1,w,c
  1329  000FAC  0A80               	xorlw	128
  1330  000FAE  5846               	subwfb	(??_BBB_broadcast+2)& (0+255),w,c
  1331  000FB0  A0D8               	btfss	status,0,c
  1332  000FB2  D7E6               	goto	l1328
  1333                           
  1334                           ;main.c: 123: }
  1335                           ;main.c: 124: identify(0xA3);
  1336  000FB4  0E00               	movlw	0
  1337  000FB6  6E42               	movwf	identify@adress+1,c
  1338  000FB8  0EA3               	movlw	163
  1339  000FBA  6E41               	movwf	identify@adress,c
  1340  000FBC  ECF1  F008         	call	_identify	;wreg free
  1341                           
  1342                           ;main.c: 125: for(i=0;i<TrueLenght;i++){
  1343  000FC0  0E00               	movlw	0
  1344  000FC2  6E3D               	movwf	_i,c
  1345  000FC4  D00D               	goto	l1342
  1346  000FC6                     l1338:
  1347                           
  1348                           ;main.c: 126: readDummy = SPI_Exchange8bit(readData[i]);
  1349  000FC6  503D               	movf	_i,w,c
  1350  000FC8  0D01               	mullw	1
  1351  000FCA  0E01               	movlw	low _readData
  1352  000FCC  24F3               	addwf	prodl,w,c
  1353  000FCE  6ED9               	movwf	fsr2l,c
  1354  000FD0  0E00               	movlw	high _readData
  1355  000FD2  20F4               	addwfc	prodh,w,c
  1356  000FD4  6EDA               	movwf	fsr2h,c
  1357  000FD6  50DF               	movf	indf2,w,c
  1358  000FD8  ECDE  F009         	call	_SPI_Exchange8bit
  1359  000FDC  6E3E               	movwf	_readDummy,c
  1360  000FDE  2A3D               	incf	_i,f,c
  1361  000FE0                     l1342:
  1362  000FE0  503D               	movf	_i,w,c
  1363  000FE2  6E44               	movwf	??_BBB_broadcast& (0+255),c
  1364  000FE4  6A45               	clrf	(??_BBB_broadcast+1)& (0+255),c
  1365  000FE6  5047               	movf	BBB_broadcast@TrueLenght,w,c
  1366  000FE8  5C44               	subwf	??_BBB_broadcast,w,c
  1367  000FEA  5045               	movf	??_BBB_broadcast+1,w,c
  1368  000FEC  0A80               	xorlw	128
  1369  000FEE  6E46               	movwf	(??_BBB_broadcast+2)& (0+255),c
  1370  000FF0  5048               	movf	BBB_broadcast@TrueLenght+1,w,c
  1371  000FF2  0A80               	xorlw	128
  1372  000FF4  5846               	subwfb	(??_BBB_broadcast+2)& (0+255),w,c
  1373  000FF6  A0D8               	btfss	status,0,c
  1374  000FF8  D7E6               	goto	l1338
  1375                           
  1376                           ;main.c: 127: }
  1377                           ;main.c: 128: identify(0xA4);
  1378  000FFA  0E00               	movlw	0
  1379  000FFC  6E42               	movwf	identify@adress+1,c
  1380  000FFE  0EA4               	movlw	164
  1381  001000  6E41               	movwf	identify@adress,c
  1382  001002  ECF1  F008         	call	_identify	;wreg free
  1383                           
  1384                           ;main.c: 129: for(i=0;i<TrueLenght;i++){
  1385  001006  0E00               	movlw	0
  1386  001008  6E3D               	movwf	_i,c
  1387  00100A  D00D               	goto	l1352
  1388  00100C                     l1348:
  1389                           
  1390                           ;main.c: 130: readDummy = SPI_Exchange8bit(readData[i]);
  1391  00100C  503D               	movf	_i,w,c
  1392  00100E  0D01               	mullw	1
  1393  001010  0E01               	movlw	low _readData
  1394  001012  24F3               	addwf	prodl,w,c
  1395  001014  6ED9               	movwf	fsr2l,c
  1396  001016  0E00               	movlw	high _readData
  1397  001018  20F4               	addwfc	prodh,w,c
  1398  00101A  6EDA               	movwf	fsr2h,c
  1399  00101C  50DF               	movf	indf2,w,c
  1400  00101E  ECDE  F009         	call	_SPI_Exchange8bit
  1401  001022  6E3E               	movwf	_readDummy,c
  1402  001024  2A3D               	incf	_i,f,c
  1403  001026                     l1352:
  1404  001026  503D               	movf	_i,w,c
  1405  001028  6E44               	movwf	??_BBB_broadcast& (0+255),c
  1406  00102A  6A45               	clrf	(??_BBB_broadcast+1)& (0+255),c
  1407  00102C  5047               	movf	BBB_broadcast@TrueLenght,w,c
  1408  00102E  5C44               	subwf	??_BBB_broadcast,w,c
  1409  001030  5045               	movf	??_BBB_broadcast+1,w,c
  1410  001032  0A80               	xorlw	128
  1411  001034  6E46               	movwf	(??_BBB_broadcast+2)& (0+255),c
  1412  001036  5048               	movf	BBB_broadcast@TrueLenght+1,w,c
  1413  001038  0A80               	xorlw	128
  1414  00103A  5846               	subwfb	(??_BBB_broadcast+2)& (0+255),w,c
  1415  00103C  B0D8               	btfsc	status,0,c
  1416  00103E  0012               	return	
  1417  001040  D7E5               	goto	l1348
  1418  001042                     __end_of_BBB_broadcast:
  1419                           	opt stack 0
  1420                           tblptru	equ	0xFF8
  1421                           tblptrh	equ	0xFF7
  1422                           tblptrl	equ	0xFF6
  1423                           tablat	equ	0xFF5
  1424                           prodh	equ	0xFF4
  1425                           prodl	equ	0xFF3
  1426                           postinc0	equ	0xFEE
  1427                           wreg	equ	0xFE8
  1428                           postdec1	equ	0xFE5
  1429                           fsr1l	equ	0xFE1
  1430                           indf2	equ	0xFDF
  1431                           fsr2h	equ	0xFDA
  1432                           fsr2l	equ	0xFD9
  1433                           status	equ	0xFD8
  1434                           
  1435 ;; *************** function _identify *****************
  1436 ;; Defined at:
  1437 ;;		line 139 in file "main.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;  adress          2    0[COMRAM] int 
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		wreg, status,2, status,0
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1451 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1453 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1454 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1455 ;;Total ram usage:        3 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		_transmit
  1461 ;;		_BBB_broadcast
  1462 ;;		_BBB_turn_player
  1463 ;;		_routine_talk
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text9
  1468  0011E2                     __ptext9:
  1469                           	opt stack 0
  1470  0011E2                     _identify:
  1471                           	opt stack 28
  1472                           
  1473                           ;incstack = 0
  1474                           ;main.c: 140: do { LATBbits.LATB1 = 1; } while(0);
  1475  0011E2  828A               	bsf	3978,1,c	;volatile
  1476                           
  1477                           ;main.c: 141: do { LATBbits.LATB2 = 1; } while(0);
  1478  0011E4  848A               	bsf	3978,2,c	;volatile
  1479                           
  1480                           ;main.c: 142: do { LATBbits.LATB3 = 1; } while(0);
  1481  0011E6  868A               	bsf	3978,3,c	;volatile
  1482                           
  1483                           ;main.c: 143: do { LATBbits.LATB4 = 1; } while(0);
  1484  0011E8  888A               	bsf	3978,4,c	;volatile
  1485                           
  1486                           ;main.c: 144: do { LATBbits.LATB5 = 1; } while(0);
  1487  0011EA  8A8A               	bsf	3978,5,c	;volatile
  1488                           
  1489                           ;main.c: 145: _delay((unsigned long)((10)*(20000000/4000.0)));
  1490  0011EC  0E41               	movlw	65
  1491  0011EE  6E43               	movwf	??_identify& (0+255),c
  1492  0011F0  0EEE               	movlw	238
  1493  0011F2                     u597:
  1494  0011F2  2EE8               	decfsz	wreg,f,c
  1495  0011F4  D7FE               	bra	u597
  1496  0011F6  2E43               	decfsz	??_identify& (0+255),f,c
  1497  0011F8  D7FC               	bra	u597
  1498  0011FA  D000               	nop2	
  1499                           
  1500                           ;main.c: 146: if (adress==0xA6) do { LATBbits.LATB1 = 0; } while(0);
  1501  0011FC  0EA6               	movlw	166
  1502  0011FE  1841               	xorwf	identify@adress,w,c
  1503  001200  1042               	iorwf	identify@adress+1,w,c
  1504  001202  B4D8               	btfsc	status,2,c
  1505  001204  928A               	bcf	3978,1,c	;volatile
  1506                           
  1507                           ;main.c: 147: if (adress==0xA1)do { LATBbits.LATB2 = 0; } while(0);
  1508  001206  0EA1               	movlw	161
  1509  001208  1841               	xorwf	identify@adress,w,c
  1510  00120A  1042               	iorwf	identify@adress+1,w,c
  1511  00120C  B4D8               	btfsc	status,2,c
  1512  00120E  948A               	bcf	3978,2,c	;volatile
  1513                           
  1514                           ;main.c: 148: if (adress==0xA2)do { LATBbits.LATB3 = 0; } while(0);
  1515  001210  0EA2               	movlw	162
  1516  001212  1841               	xorwf	identify@adress,w,c
  1517  001214  1042               	iorwf	identify@adress+1,w,c
  1518  001216  B4D8               	btfsc	status,2,c
  1519  001218  968A               	bcf	3978,3,c	;volatile
  1520                           
  1521                           ;main.c: 149: if (adress==0xA3)do { LATBbits.LATB4 = 0; } while(0);
  1522  00121A  0EA3               	movlw	163
  1523  00121C  1841               	xorwf	identify@adress,w,c
  1524  00121E  1042               	iorwf	identify@adress+1,w,c
  1525  001220  B4D8               	btfsc	status,2,c
  1526  001222  988A               	bcf	3978,4,c	;volatile
  1527                           
  1528                           ;main.c: 150: if (adress==0xA4)do { LATBbits.LATB5 = 0; } while(0);
  1529  001224  0EA4               	movlw	164
  1530  001226  1841               	xorwf	identify@adress,w,c
  1531  001228  1042               	iorwf	identify@adress+1,w,c
  1532  00122A  A4D8               	btfss	status,2,c
  1533  00122C  0012               	return	
  1534  00122E  9A8A               	bcf	3978,5,c	;volatile
  1535  001230  0012               	return	
  1536  001232                     __end_of_identify:
  1537                           	opt stack 0
  1538                           tblptru	equ	0xFF8
  1539                           tblptrh	equ	0xFF7
  1540                           tblptrl	equ	0xFF6
  1541                           tablat	equ	0xFF5
  1542                           prodh	equ	0xFF4
  1543                           prodl	equ	0xFF3
  1544                           postinc0	equ	0xFEE
  1545                           wreg	equ	0xFE8
  1546                           postdec1	equ	0xFE5
  1547                           fsr1l	equ	0xFE1
  1548                           indf2	equ	0xFDF
  1549                           fsr2h	equ	0xFDA
  1550                           fsr2l	equ	0xFD9
  1551                           status	equ	0xFD8
  1552                           
  1553 ;; *************** function _SPI_Exchange8bit *****************
  1554 ;; Defined at:
  1555 ;;		line 73 in file "mcc_generated_files/spi.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;  data            1    wreg     unsigned char 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  data            1    1[COMRAM] unsigned char 
  1560 ;;  dummyRead       1    0[COMRAM] unsigned char 
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      unsigned char 
  1563 ;; Registers used:
  1564 ;;		wreg, status,2
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1571 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1573 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1574 ;;Total ram usage:        2 bytes
  1575 ;; Hardware stack levels used:    1
  1576 ;; This function calls:
  1577 ;;		Nothing
  1578 ;; This function is called by:
  1579 ;;		_key_locking
  1580 ;;		_receiving
  1581 ;;		_transmit
  1582 ;;		_BBB_broadcast
  1583 ;;		_SPI_Exchange8bitBuffer
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text10
  1588  0013BC                     __ptext10:
  1589                           	opt stack 0
  1590  0013BC                     _SPI_Exchange8bit:
  1591                           	opt stack 28
  1592                           
  1593                           ;incstack = 0
  1594                           ;SPI_Exchange8bit@data stored from wreg
  1595  0013BC  6E42               	movwf	SPI_Exchange8bit@data,c
  1596                           
  1597                           ;spi.c: 75: uint8_t dummyRead = SSPBUF;
  1598  0013BE  CFC9 F041          	movff	4041,SPI_Exchange8bit@dummyRead	;volatile
  1599                           
  1600                           ;spi.c: 78: SSPCON1bits.WCOL = 0;
  1601  0013C2  9EC6               	bcf	4038,7,c	;volatile
  1602                           
  1603                           ;spi.c: 80: SSPBUF = data;
  1604  0013C4  C042  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
  1605  0013C8                     l16:
  1606  0013C8  A0C7               	btfss	4039,0,c	;volatile
  1607  0013CA  D7FE               	goto	l16
  1608                           
  1609                           ;spi.c: 84: }
  1610                           ;spi.c: 86: return (SSPBUF);
  1611  0013CC  50C9               	movf	4041,w,c	;volatile
  1612  0013CE  0012               	return		;funcret
  1613  0013D0                     __end_of_SPI_Exchange8bit:
  1614                           	opt stack 0
  1615                           tblptru	equ	0xFF8
  1616                           tblptrh	equ	0xFF7
  1617                           tblptrl	equ	0xFF6
  1618                           tablat	equ	0xFF5
  1619                           prodh	equ	0xFF4
  1620                           prodl	equ	0xFF3
  1621                           postinc0	equ	0xFEE
  1622                           wreg	equ	0xFE8
  1623                           postdec1	equ	0xFE5
  1624                           fsr1l	equ	0xFE1
  1625                           indf2	equ	0xFDF
  1626                           fsr2h	equ	0xFDA
  1627                           fsr2l	equ	0xFD9
  1628                           status	equ	0xFD8
  1629                           
  1630 ;; *************** function _printf *****************
  1631 ;; Defined at:
  1632 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;  f               2    2[COMRAM] PTR const unsigned char 
  1635 ;;		 -> STR_1(25), 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  tmpval          4    0        struct .
  1638 ;;  cp              3    0        PTR const unsigned char 
  1639 ;;  ap              2    4[COMRAM] PTR void [1]
  1640 ;;		 -> ?_printf(2), 
  1641 ;;  len             2    0        unsigned int 
  1642 ;;  val             2    0        unsigned int 
  1643 ;;  c               1    6[COMRAM] char 
  1644 ;;  flag            1    0        unsigned char 
  1645 ;;  prec            1    0        char 
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  2    2[COMRAM] int 
  1648 ;; Registers used:
  1649 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1655 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1656 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1658 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1659 ;;Total ram usage:        5 bytes
  1660 ;; Hardware stack levels used:    1
  1661 ;; Hardware stack levels required when called:    2
  1662 ;; This function calls:
  1663 ;;		_putch
  1664 ;; This function is called by:
  1665 ;;		_main
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           	psect	text11
  1670  0012C4                     __ptext11:
  1671                           	opt stack 0
  1672  0012C4                     _printf:
  1673                           	opt stack 28
  1674                           
  1675                           ;doprnt.c: 466: va_list ap;
  1676                           ;doprnt.c: 499: signed char c;
  1677                           ;doprnt.c: 506: signed char prec;
  1678                           ;doprnt.c: 508: unsigned char flag;
  1679                           ;doprnt.c: 523: union {
  1680                           ;doprnt.c: 524: unsigned long vd;
  1681                           ;doprnt.c: 525: double integ;
  1682                           ;doprnt.c: 526: } tmpval;
  1683                           ;doprnt.c: 528: unsigned int val;
  1684                           ;doprnt.c: 529: unsigned len;
  1685                           ;doprnt.c: 530: const char * cp;
  1686                           ;doprnt.c: 533: *ap = __va_start();
  1687                           
  1688                           ;incstack = 0
  1689  0012C4  0E45               	movlw	low (?_printf+2)
  1690  0012C6  6E45               	movwf	printf@ap,c
  1691  0012C8  0E00               	movlw	high (?_printf+2)
  1692  0012CA  6E46               	movwf	printf@ap+1,c
  1693                           
  1694                           ;doprnt.c: 536: while(c = *f++) {
  1695  0012CC  D003               	goto	l1362
  1696  0012CE                     l1360:
  1697                           
  1698                           ;doprnt.c: 540: {
  1699                           ;doprnt.c: 541: (putch(c) );
  1700  0012CE  5047               	movf	printf@c,w,c
  1701  0012D0  ECF7  F009         	call	_putch
  1702  0012D4                     l1362:
  1703  0012D4  C043  FFF6         	movff	printf@f,tblptrl
  1704  0012D8  C044  FFF7         	movff	printf@f+1,tblptrh
  1705  0012DC  4A43               	infsnz	printf@f,f,c
  1706  0012DE  2A44               	incf	printf@f+1,f,c
  1707  0012E0                     	if	0	;tblptru may be non-zero
  1708  0012E0                     	endif
  1709  0012E0                     	if	0	;tblptru may be non-zero
  1710  0012E0                     	endif
  1711  0012E0  0008               	tblrd		*
  1712  0012E2  CFF5 F047          	movff	tablat,printf@c
  1713  0012E6  5047               	movf	printf@c,w,c
  1714  0012E8  B4D8               	btfsc	status,2,c
  1715  0012EA  0012               	return	
  1716  0012EC  D7F0               	goto	l1360
  1717  0012EE                     __end_of_printf:
  1718                           	opt stack 0
  1719                           tblptru	equ	0xFF8
  1720                           tblptrh	equ	0xFF7
  1721                           tblptrl	equ	0xFF6
  1722                           tablat	equ	0xFF5
  1723                           prodh	equ	0xFF4
  1724                           prodl	equ	0xFF3
  1725                           postinc0	equ	0xFEE
  1726                           wreg	equ	0xFE8
  1727                           postdec1	equ	0xFE5
  1728                           fsr1l	equ	0xFE1
  1729                           indf2	equ	0xFDF
  1730                           fsr2h	equ	0xFDA
  1731                           fsr2l	equ	0xFD9
  1732                           status	equ	0xFD8
  1733                           
  1734 ;; *************** function _putch *****************
  1735 ;; Defined at:
  1736 ;;		line 107 in file "mcc_generated_files/eusart1.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  txData          1    wreg     unsigned char 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  txData          1    1[COMRAM] unsigned char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      void 
  1743 ;; Registers used:
  1744 ;;		wreg, status,2, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1753 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1754 ;;Total ram usage:        1 bytes
  1755 ;; Hardware stack levels used:    1
  1756 ;; Hardware stack levels required when called:    1
  1757 ;; This function calls:
  1758 ;;		_EUSART1_Write
  1759 ;; This function is called by:
  1760 ;;		_printf
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           	psect	text12
  1765  0013EE                     __ptext12:
  1766                           	opt stack 0
  1767  0013EE                     _putch:
  1768                           	opt stack 28
  1769                           
  1770                           ;incstack = 0
  1771                           ;putch@txData stored from wreg
  1772  0013EE  6E42               	movwf	putch@txData,c
  1773                           
  1774                           ;eusart1.c: 109: EUSART1_Write(txData);
  1775  0013F0  5042               	movf	putch@txData,w,c
  1776  0013F2  ECF1  F009         	call	_EUSART1_Write
  1777  0013F6  0012               	return		;funcret
  1778  0013F8                     __end_of_putch:
  1779                           	opt stack 0
  1780                           tblptru	equ	0xFF8
  1781                           tblptrh	equ	0xFF7
  1782                           tblptrl	equ	0xFF6
  1783                           tablat	equ	0xFF5
  1784                           prodh	equ	0xFF4
  1785                           prodl	equ	0xFF3
  1786                           postinc0	equ	0xFEE
  1787                           wreg	equ	0xFE8
  1788                           postdec1	equ	0xFE5
  1789                           fsr1l	equ	0xFE1
  1790                           indf2	equ	0xFDF
  1791                           fsr2h	equ	0xFDA
  1792                           fsr2l	equ	0xFD9
  1793                           status	equ	0xFD8
  1794                           
  1795 ;; *************** function _EUSART1_Write *****************
  1796 ;; Defined at:
  1797 ;;		line 93 in file "mcc_generated_files/eusart1.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  txData          1    wreg     unsigned char 
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;  txData          1    0[COMRAM] unsigned char 
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		wreg
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1812 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1814 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1815 ;;Total ram usage:        1 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; This function calls:
  1818 ;;		Nothing
  1819 ;; This function is called by:
  1820 ;;		_putch
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           	psect	text13
  1825  0013E2                     __ptext13:
  1826                           	opt stack 0
  1827  0013E2                     _EUSART1_Write:
  1828                           	opt stack 28
  1829                           
  1830                           ;incstack = 0
  1831                           ;EUSART1_Write@txData stored from wreg
  1832  0013E2  6E41               	movwf	EUSART1_Write@txData,c
  1833  0013E4                     l130:
  1834  0013E4  A89E               	btfss	3998,4,c	;volatile
  1835  0013E6  D7FE               	goto	l130
  1836                           
  1837                           ;eusart1.c: 97: }
  1838                           ;eusart1.c: 99: TXREG1 = txData;
  1839  0013E8  C041  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1840  0013EC  0012               	return		;funcret
  1841  0013EE                     __end_of_EUSART1_Write:
  1842                           	opt stack 0
  1843                           tblptru	equ	0xFF8
  1844                           tblptrh	equ	0xFF7
  1845                           tblptrl	equ	0xFF6
  1846                           tablat	equ	0xFF5
  1847                           prodh	equ	0xFF4
  1848                           prodl	equ	0xFF3
  1849                           postinc0	equ	0xFEE
  1850                           wreg	equ	0xFE8
  1851                           postdec1	equ	0xFE5
  1852                           fsr1l	equ	0xFE1
  1853                           indf2	equ	0xFDF
  1854                           fsr2h	equ	0xFDA
  1855                           fsr2l	equ	0xFD9
  1856                           status	equ	0xFD8
  1857                           
  1858 ;; *************** function _TMR1_StartTimer *****************
  1859 ;; Defined at:
  1860 ;;		line 85 in file "mcc_generated_files/tmr1.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;		None
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;		None
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      void 
  1867 ;; Registers used:
  1868 ;;		None
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1878 ;;Total ram usage:        0 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; This function calls:
  1881 ;;		Nothing
  1882 ;; This function is called by:
  1883 ;;		_main
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           	psect	text14
  1888  001406                     __ptext14:
  1889                           	opt stack 0
  1890  001406                     _TMR1_StartTimer:
  1891                           	opt stack 30
  1892                           
  1893                           ;tmr1.c: 88: T1CONbits.TMR1ON = 1;
  1894                           
  1895                           ;incstack = 0
  1896  001406  80CD               	bsf	4045,0,c	;volatile
  1897  001408  0012               	return		;funcret
  1898  00140A                     __end_of_TMR1_StartTimer:
  1899                           	opt stack 0
  1900                           tblptru	equ	0xFF8
  1901                           tblptrh	equ	0xFF7
  1902                           tblptrl	equ	0xFF6
  1903                           tablat	equ	0xFF5
  1904                           prodh	equ	0xFF4
  1905                           prodl	equ	0xFF3
  1906                           postinc0	equ	0xFEE
  1907                           wreg	equ	0xFE8
  1908                           postdec1	equ	0xFE5
  1909                           fsr1l	equ	0xFE1
  1910                           indf2	equ	0xFDF
  1911                           fsr2h	equ	0xFDA
  1912                           fsr2l	equ	0xFD9
  1913                           status	equ	0xFD8
  1914                           
  1915 ;; *************** function _SYSTEM_Initialize *****************
  1916 ;; Defined at:
  1917 ;;		line 112 in file "mcc_generated_files/mcc.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;		None
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;		None
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  1    wreg      void 
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1935 ;;Total ram usage:        0 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    1
  1938 ;; This function calls:
  1939 ;;		_EUSART1_Initialize
  1940 ;;		_OSCILLATOR_Initialize
  1941 ;;		_PIN_MANAGER_Initialize
  1942 ;;		_SPI_Initialize
  1943 ;;		_TMR1_Initialize
  1944 ;; This function is called by:
  1945 ;;		_main
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           	psect	text15
  1950  001390                     __ptext15:
  1951                           	opt stack 0
  1952  001390                     _SYSTEM_Initialize:
  1953                           	opt stack 29
  1954                           
  1955                           ;mcc.c: 114: PIN_MANAGER_Initialize();
  1956                           
  1957                           ;incstack = 0
  1958  001390  EC36  F009         	call	_PIN_MANAGER_Initialize	;wreg free
  1959                           
  1960                           ;mcc.c: 115: OSCILLATOR_Initialize();
  1961  001394  ECE8  F009         	call	_OSCILLATOR_Initialize	;wreg free
  1962                           
  1963                           ;mcc.c: 116: SPI_Initialize();
  1964  001398  ECFC  F009         	call	_SPI_Initialize	;wreg free
  1965                           
  1966                           ;mcc.c: 117: TMR1_Initialize();
  1967  00139C  EC77  F009         	call	_TMR1_Initialize	;wreg free
  1968                           
  1969                           ;mcc.c: 118: EUSART1_Initialize();
  1970  0013A0  ECD3  F009         	call	_EUSART1_Initialize	;wreg free
  1971  0013A4  0012               	return		;funcret
  1972  0013A6                     __end_of_SYSTEM_Initialize:
  1973                           	opt stack 0
  1974                           tblptru	equ	0xFF8
  1975                           tblptrh	equ	0xFF7
  1976                           tblptrl	equ	0xFF6
  1977                           tablat	equ	0xFF5
  1978                           prodh	equ	0xFF4
  1979                           prodl	equ	0xFF3
  1980                           postinc0	equ	0xFEE
  1981                           wreg	equ	0xFE8
  1982                           postdec1	equ	0xFE5
  1983                           fsr1l	equ	0xFE1
  1984                           indf2	equ	0xFDF
  1985                           fsr2h	equ	0xFDA
  1986                           fsr2l	equ	0xFD9
  1987                           status	equ	0xFD8
  1988                           
  1989 ;; *************** function _TMR1_Initialize *****************
  1990 ;; Defined at:
  1991 ;;		line 62 in file "mcc_generated_files/tmr1.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;		None
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;		None
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg, status,2, status,0
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2007 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2008 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2009 ;;Total ram usage:        2 bytes
  2010 ;; Hardware stack levels used:    1
  2011 ;; This function calls:
  2012 ;;		Nothing
  2013 ;; This function is called by:
  2014 ;;		_SYSTEM_Initialize
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           	psect	text16
  2019  0012EE                     __ptext16:
  2020                           	opt stack 0
  2021  0012EE                     _TMR1_Initialize:
  2022                           	opt stack 29
  2023                           
  2024                           ;tmr1.c: 67: T1GCON = 0x00;
  2025                           
  2026                           ;incstack = 0
  2027  0012EE  0E00               	movlw	0
  2028  0012F0  6EAA               	movwf	4010,c	;volatile
  2029                           
  2030                           ;tmr1.c: 70: TMR1H = 0xCF;
  2031  0012F2  0ECF               	movlw	207
  2032  0012F4  6ECF               	movwf	4047,c	;volatile
  2033                           
  2034                           ;tmr1.c: 73: TMR1L = 0x2C;
  2035  0012F6  0E2C               	movlw	44
  2036  0012F8  6ECE               	movwf	4046,c	;volatile
  2037                           
  2038                           ;tmr1.c: 76: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  2039  0012FA  50CE               	movf	4046,w,c	;volatile
  2040  0012FC  CFCF F041          	movff	4047,??_TMR1_Initialize	;volatile
  2041  001300  6A42               	clrf	(??_TMR1_Initialize+1)& (0+255),c
  2042  001302  C041  F042         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  2043  001306  6A41               	clrf	??_TMR1_Initialize,c
  2044  001308  1041               	iorwf	??_TMR1_Initialize,w,c
  2045  00130A  6E59               	movwf	_timer1ReloadVal,c	;volatile
  2046  00130C  5042               	movf	??_TMR1_Initialize+1,w,c
  2047  00130E  6E5A               	movwf	_timer1ReloadVal+1,c	;volatile
  2048                           
  2049                           ;tmr1.c: 79: PIR1bits.TMR1IF = 0;
  2050  001310  909E               	bcf	3998,0,c	;volatile
  2051                           
  2052                           ;tmr1.c: 82: T1CON = 0x31;
  2053  001312  0E31               	movlw	49
  2054  001314  6ECD               	movwf	4045,c	;volatile
  2055  001316  0012               	return		;funcret
  2056  001318                     __end_of_TMR1_Initialize:
  2057                           	opt stack 0
  2058                           tblptru	equ	0xFF8
  2059                           tblptrh	equ	0xFF7
  2060                           tblptrl	equ	0xFF6
  2061                           tablat	equ	0xFF5
  2062                           prodh	equ	0xFF4
  2063                           prodl	equ	0xFF3
  2064                           postinc0	equ	0xFEE
  2065                           wreg	equ	0xFE8
  2066                           postdec1	equ	0xFE5
  2067                           fsr1l	equ	0xFE1
  2068                           indf2	equ	0xFDF
  2069                           fsr2h	equ	0xFDA
  2070                           fsr2l	equ	0xFD9
  2071                           status	equ	0xFD8
  2072                           
  2073 ;; *************** function _SPI_Initialize *****************
  2074 ;; Defined at:
  2075 ;;		line 62 in file "mcc_generated_files/spi.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;		None
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;		None
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg, status,2
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2093 ;;Total ram usage:        0 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_SYSTEM_Initialize
  2099 ;;		_main
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           	psect	text17
  2104  0013F8                     __ptext17:
  2105                           	opt stack 0
  2106  0013F8                     _SPI_Initialize:
  2107                           	opt stack 29
  2108                           
  2109                           ;spi.c: 67: SSPSTAT = 0x40;
  2110                           
  2111                           ;incstack = 0
  2112  0013F8  0E40               	movlw	64
  2113  0013FA  6EC7               	movwf	4039,c	;volatile
  2114                           
  2115                           ;spi.c: 70: SSPCON1 = 0x24;
  2116  0013FC  0E24               	movlw	36
  2117  0013FE  6EC6               	movwf	4038,c	;volatile
  2118  001400  0012               	return		;funcret
  2119  001402                     __end_of_SPI_Initialize:
  2120                           	opt stack 0
  2121                           tblptru	equ	0xFF8
  2122                           tblptrh	equ	0xFF7
  2123                           tblptrl	equ	0xFF6
  2124                           tablat	equ	0xFF5
  2125                           prodh	equ	0xFF4
  2126                           prodl	equ	0xFF3
  2127                           postinc0	equ	0xFEE
  2128                           wreg	equ	0xFE8
  2129                           postdec1	equ	0xFE5
  2130                           fsr1l	equ	0xFE1
  2131                           indf2	equ	0xFDF
  2132                           fsr2h	equ	0xFDA
  2133                           fsr2l	equ	0xFD9
  2134                           status	equ	0xFD8
  2135                           
  2136 ;; *************** function _PIN_MANAGER_Initialize *****************
  2137 ;; Defined at:
  2138 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;		None
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  1    wreg      void 
  2145 ;; Registers used:
  2146 ;;		wreg, status,2
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2156 ;;Total ram usage:        0 bytes
  2157 ;; Hardware stack levels used:    1
  2158 ;; This function calls:
  2159 ;;		Nothing
  2160 ;; This function is called by:
  2161 ;;		_SYSTEM_Initialize
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           	psect	text18
  2166  00126C                     __ptext18:
  2167                           	opt stack 0
  2168  00126C                     _PIN_MANAGER_Initialize:
  2169                           	opt stack 29
  2170                           
  2171                           ;pin_manager.c: 57: LATA = 0x00;
  2172                           
  2173                           ;incstack = 0
  2174  00126C  0E00               	movlw	0
  2175  00126E  6E89               	movwf	3977,c	;volatile
  2176                           
  2177                           ;pin_manager.c: 58: LATB = 0x00;
  2178  001270  0E00               	movlw	0
  2179  001272  6E8A               	movwf	3978,c	;volatile
  2180                           
  2181                           ;pin_manager.c: 59: LATC = 0x00;
  2182  001274  0E00               	movlw	0
  2183  001276  6E8B               	movwf	3979,c	;volatile
  2184                           
  2185                           ;pin_manager.c: 64: TRISA = 0xED;
  2186  001278  0EED               	movlw	237
  2187  00127A  6E92               	movwf	3986,c	;volatile
  2188                           
  2189                           ;pin_manager.c: 65: TRISB = 0xC1;
  2190  00127C  0EC1               	movlw	193
  2191  00127E  6E93               	movwf	3987,c	;volatile
  2192                           
  2193                           ;pin_manager.c: 66: TRISC = 0x9F;
  2194  001280  0E9F               	movlw	159
  2195  001282  6E94               	movwf	3988,c	;volatile
  2196                           
  2197                           ;pin_manager.c: 71: ANCON0 = 0x0F;
  2198  001284  0E0F               	movlw	15
  2199  001286  010F               	movlb	15	; () banked
  2200  001288  6F5D               	movwf	93,b	;volatile
  2201                           
  2202                           ;pin_manager.c: 72: ANCON1 = 0x07;
  2203  00128A  0E07               	movlw	7
  2204  00128C  010F               	movlb	15	; () banked
  2205  00128E  6F5C               	movwf	92,b	;volatile
  2206                           
  2207                           ;pin_manager.c: 77: WPUB = 0x00;
  2208  001290  0E00               	movlw	0
  2209  001292  010F               	movlb	15	; () banked
  2210  001294  6F5B               	movwf	91,b	;volatile
  2211                           
  2212                           ; BSR set to: 15
  2213                           ;pin_manager.c: 78: INTCON2bits.nRBPU = 1;
  2214  001296  8EF1               	bsf	intcon2,7,c	;volatile
  2215                           
  2216                           ; BSR set to: 15
  2217  001298  0012               	return		;funcret
  2218  00129A                     __end_of_PIN_MANAGER_Initialize:
  2219                           	opt stack 0
  2220                           tblptru	equ	0xFF8
  2221                           tblptrh	equ	0xFF7
  2222                           tblptrl	equ	0xFF6
  2223                           tablat	equ	0xFF5
  2224                           prodh	equ	0xFF4
  2225                           prodl	equ	0xFF3
  2226                           intcon2	equ	0xFF1
  2227                           postinc0	equ	0xFEE
  2228                           wreg	equ	0xFE8
  2229                           postdec1	equ	0xFE5
  2230                           fsr1l	equ	0xFE1
  2231                           indf2	equ	0xFDF
  2232                           fsr2h	equ	0xFDA
  2233                           fsr2l	equ	0xFD9
  2234                           status	equ	0xFD8
  2235                           
  2236 ;; *************** function _OSCILLATOR_Initialize *****************
  2237 ;; Defined at:
  2238 ;;		line 121 in file "mcc_generated_files/mcc.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;		None
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;		None
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  1    wreg      void 
  2245 ;; Registers used:
  2246 ;;		wreg, status,2
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2256 ;;Total ram usage:        0 bytes
  2257 ;; Hardware stack levels used:    1
  2258 ;; This function calls:
  2259 ;;		Nothing
  2260 ;; This function is called by:
  2261 ;;		_SYSTEM_Initialize
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text19
  2266  0013D0                     __ptext19:
  2267                           	opt stack 0
  2268  0013D0                     _OSCILLATOR_Initialize:
  2269                           	opt stack 29
  2270                           
  2271                           ;mcc.c: 124: OSCCON = 0x60;
  2272                           
  2273                           ; BSR set to: 15
  2274                           ;incstack = 0
  2275  0013D0  0E60               	movlw	96
  2276  0013D2  6ED3               	movwf	4051,c	;volatile
  2277                           
  2278                           ;mcc.c: 126: OSCCON2 = 0x00;
  2279  0013D4  0E00               	movlw	0
  2280  0013D6  6ED2               	movwf	4050,c	;volatile
  2281                           
  2282                           ;mcc.c: 128: OSCTUNE = 0x00;
  2283  0013D8  0E00               	movlw	0
  2284  0013DA  6E9B               	movwf	3995,c	;volatile
  2285                           
  2286                           ;mcc.c: 130: REFOCON = 0x00;
  2287  0013DC  0E00               	movlw	0
  2288  0013DE  6E9A               	movwf	3994,c	;volatile
  2289  0013E0  0012               	return		;funcret
  2290  0013E2                     __end_of_OSCILLATOR_Initialize:
  2291                           	opt stack 0
  2292                           tblptru	equ	0xFF8
  2293                           tblptrh	equ	0xFF7
  2294                           tblptrl	equ	0xFF6
  2295                           tablat	equ	0xFF5
  2296                           prodh	equ	0xFF4
  2297                           prodl	equ	0xFF3
  2298                           intcon2	equ	0xFF1
  2299                           postinc0	equ	0xFEE
  2300                           wreg	equ	0xFE8
  2301                           postdec1	equ	0xFE5
  2302                           fsr1l	equ	0xFE1
  2303                           indf2	equ	0xFDF
  2304                           fsr2h	equ	0xFDA
  2305                           fsr2l	equ	0xFD9
  2306                           status	equ	0xFD8
  2307                           
  2308 ;; *************** function _EUSART1_Initialize *****************
  2309 ;; Defined at:
  2310 ;;		line 53 in file "mcc_generated_files/eusart1.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;		None
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      void 
  2317 ;; Registers used:
  2318 ;;		wreg, status,2
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2328 ;;Total ram usage:        0 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_SYSTEM_Initialize
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           	psect	text20
  2338  0013A6                     __ptext20:
  2339                           	opt stack 0
  2340  0013A6                     _EUSART1_Initialize:
  2341                           	opt stack 29
  2342                           
  2343                           ;eusart1.c: 58: BAUDCON1 = 0x08;
  2344                           
  2345                           ;incstack = 0
  2346  0013A6  0E08               	movlw	8
  2347  0013A8  6EA7               	movwf	4007,c	;volatile
  2348                           
  2349                           ;eusart1.c: 61: RCSTA1 = 0x90;
  2350  0013AA  0E90               	movlw	144
  2351  0013AC  6EAB               	movwf	4011,c	;volatile
  2352                           
  2353                           ;eusart1.c: 64: TXSTA1 = 0x24;
  2354  0013AE  0E24               	movlw	36
  2355  0013B0  6EAC               	movwf	4012,c	;volatile
  2356                           
  2357                           ;eusart1.c: 67: SPBRG1 = 0x08;
  2358  0013B2  0E08               	movlw	8
  2359  0013B4  6EAF               	movwf	4015,c	;volatile
  2360                           
  2361                           ;eusart1.c: 70: SPBRGH1 = 0x02;
  2362  0013B6  0E02               	movlw	2
  2363  0013B8  6E7D               	movwf	3965,c	;volatile
  2364  0013BA  0012               	return		;funcret
  2365  0013BC                     __end_of_EUSART1_Initialize:
  2366                           	opt stack 0
  2367                           tblptru	equ	0xFF8
  2368                           tblptrh	equ	0xFF7
  2369                           tblptrl	equ	0xFF6
  2370                           tablat	equ	0xFF5
  2371                           prodh	equ	0xFF4
  2372                           prodl	equ	0xFF3
  2373                           intcon2	equ	0xFF1
  2374                           postinc0	equ	0xFEE
  2375                           wreg	equ	0xFE8
  2376                           postdec1	equ	0xFE5
  2377                           fsr1l	equ	0xFE1
  2378                           indf2	equ	0xFDF
  2379                           fsr2h	equ	0xFDA
  2380                           fsr2l	equ	0xFD9
  2381                           status	equ	0xFD8
  2382                           tblptru	equ	0xFF8
  2383                           tblptrh	equ	0xFF7
  2384                           tblptrl	equ	0xFF6
  2385                           tablat	equ	0xFF5
  2386                           prodh	equ	0xFF4
  2387                           prodl	equ	0xFF3
  2388                           intcon2	equ	0xFF1
  2389                           postinc0	equ	0xFEE
  2390                           wreg	equ	0xFE8
  2391                           postdec1	equ	0xFE5
  2392                           fsr1l	equ	0xFE1
  2393                           indf2	equ	0xFDF
  2394                           fsr2h	equ	0xFDA
  2395                           fsr2l	equ	0xFD9
  2396                           status	equ	0xFD8
  2397                           
  2398                           	psect	rparam
  2399  0000                     tblptru	equ	0xFF8
  2400                           tblptrh	equ	0xFF7
  2401                           tblptrl	equ	0xFF6
  2402                           tablat	equ	0xFF5
  2403                           prodh	equ	0xFF4
  2404                           prodl	equ	0xFF3
  2405                           intcon2	equ	0xFF1
  2406                           postinc0	equ	0xFEE
  2407                           wreg	equ	0xFE8
  2408                           postdec1	equ	0xFE5
  2409                           fsr1l	equ	0xFE1
  2410                           indf2	equ	0xFDF
  2411                           fsr2h	equ	0xFDA
  2412                           fsr2l	equ	0xFD9
  2413                           status	equ	0xFD8


Data Sizes:
    Strings     25
    Constant    0
    Data        4
    BSS         64
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     20      90
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[25]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_routine_talk
    _routine_talk->_BBB_turn_player
    _receiving->_SPI_Exchange8bit
    _key_locking->_SPI_Exchange8bit
    _BBB_turn_player->_transmit
    _transmit->_identify
    _BBB_broadcast->_identify
    _printf->_putch
    _putch->_EUSART1_Write
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4554
                     _SPI_Initialize
                  _SYSTEM_Initialize
                    _TMR1_StartTimer
                             _printf
                       _routine_talk
 ---------------------------------------------------------------------------------
 (1) _routine_talk                                         8     6      2    4414
                                             12 COMRAM     8     6      2
                      _BBB_broadcast
                    _BBB_turn_player
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
                           _identify
                        _key_locking
                          _receiving
                           _transmit
 ---------------------------------------------------------------------------------
 (2) _receiving                                            4     2      2      15
                                              2 COMRAM     4     2      2
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _key_locking                                          7     3      4     338
                                              2 COMRAM     7     3      4
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _TMR1_WriteTimer                                      2     0      2     216
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_ReadTimer                                       8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _BBB_turn_player                                      2     0      2    1476
                                             10 COMRAM     2     0      2
                           _identify
                           _transmit
 ---------------------------------------------------------------------------------
 (2) _transmit                                             7     5      2     810
                                              3 COMRAM     7     5      2
                   _SPI_Exchange8bit
                           _identify
 ---------------------------------------------------------------------------------
 (2) _BBB_broadcast                                        5     5      0     662
                                              3 COMRAM     5     5      0
                   _SPI_Exchange8bit
                           _identify
 ---------------------------------------------------------------------------------
 (3) _identify                                             3     1      2     558
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _SPI_Exchange8bit                                     2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     140
                                              2 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      30
                                              1 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Initialize
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR1_Initialize
   _TMR1_StartTimer
   _printf
     _putch
       _EUSART1_Write
   _routine_talk
     _BBB_broadcast
       _SPI_Exchange8bit
       _identify
     _BBB_turn_player
       _identify
       _transmit
         _SPI_Exchange8bit
         _identify
     _TMR1_ReadTimer
     _TMR1_WriteTimer
     _identify
     _key_locking
       _SPI_Exchange8bit
     _receiving
       _SPI_Exchange8bit
     _transmit
       _SPI_Exchange8bit
       _identify

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     14      5A       1       94.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5A       6        0.0%
DATA                 0      0      5A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed May 02 17:07:05 2018

                 _SPI_Initialize 13F8                                _i 003D  
                    _SSPSTATbits 000FC7                               l16 13C8  
                    __CFG_BORV$3 000000                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                     __CFG_CP2$OFF 000000  
                   __CFG_CP3$OFF 000000                              l130 13E4  
                   __CFG_CPB$OFF 000000                     __CFG_CPD$OFF 000000  
                            u597 11F2                  _timer1ReloadVal 0059  
                            prod 000FF3                              wreg 000FE8  
             transmit@TrueLenght 0049                             l1310 117E  
                           l1304 1154                             l1322 0F54  
                           l1250 11AC                             l1306 115A  
                           l1402 110C                             l1332 0F9A  
                           l1420 12B6                             l1342 0FE0  
                           l1318 0F3A                             l1254 11C6  
                           l1406 1124                             l1360 12CE  
                           l1352 1026                             l1328 0F80  
                           l1362 12D4                             l1338 0FC6  
                           l1274 136C                             l1370 1064  
                           l1348 100C                             l1294 1130  
                           l1390 10D2                             l1288 1338  
                           l1376 1084                             l1298 1138  
                           l1394 10E4                             l1388 10BC  
                           l1398 10FC                             STR_1 0F01  
                           _LATA 000F89                             _LATB 000F8A  
                           _LATC 000F8B                             _WPUB 000F5B  
          __size_of_routine_talk 00EA                    _EUSART1_Write 13E2  
          routine_talk@ReadTimer 004F                             _main 129A  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9                             _turn 003F  
                           prodl 000FF3                             start 0000  
                  __CFG_IESO$OFF 000000                    __CFG_FOSC$HS2 000000  
         __end_of_SPI_Initialize 1402                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000000   __size_of_OSCILLATOR_Initialize 0012  
  __end_of_OSCILLATOR_Initialize 13E2                            ?_main 0041  
                _TMR1_StartTimer 1406                     ?_key_locking 0043  
                          _T1CON 000FCD                            _TMR1H 000FCF  
                          _TMR1L 000FCE                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
               ?_BBB_turn_player 004B                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                  __CFG_WRT3$OFF 000000                     _routine_talk 1042  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                 __CFG_EBTRB$OFF 000000                            _putch 13EE  
                          _total 0040                   ?_EUSART1_Write 0041  
        __end_of_TMR1_Initialize 1318                            tablat 000FF5  
                          status 000FD8                  _TMR1_WriteTimer 135A  
                ?_SPI_Initialize 0041                  __initialization 1232  
     __end_of_EUSART1_Initialize 13BC                     __end_of_main 12C4  
             routine_talk@adress 004D                           ??_main 0055  
                  __activetblptr 000001                   __CFG_RETEN$OFF 000000  
       __end_of_SPI_Exchange8bit 13D0                           _ANCON0 000F5D  
                         _ANCON1 000F5C                           ?_putch 0041  
                         _T1GCON 000FAA          TMR1_WriteTimer@timerVal 0041  
                __CFG_BBSIZ$BB2K 000000                   __CFG_WDTEN$OFF 000000  
                         _RCREG1 000FAE                           _RCSTA1 000FAB  
                         _OSCCON 000FD3                           _SPBRG1 000FAF  
                         _SSPBUF 000FC9                           _TXREG1 000FAD  
                         _TXSTA1 000FAC                   __CFG_XINST$OFF 000000  
               __end_of_identify 1232          __end_of_TMR1_StartTimer 140A  
                 __CFG_STVREN$ON 000000                           clear_0 1258  
                         _printf 12C4                     transmit@dest 0044  
                   __pdataCOMRAM 0055                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                  ??_EUSART1_Write 0041  
               __end_of_transmit 11E2          __end_of_TMR1_WriteTimer 1376  
               ?_TMR1_Initialize 0041                _SYSTEM_Initialize 1390  
                     __accesstop 0060          __end_of__initialization 125E  
             ?_SYSTEM_Initialize 0041                   identify@adress 0041  
                  ___rparam_used 000001              BBB_turn_player@dest 004B  
                 __pcstackCOMRAM 0041           __size_of_BBB_broadcast 0126  
            ??_SYSTEM_Initialize 0043                    __end_of_putch 13F8  
               routine_talk@lock 0052                 routine_talk@type 0053  
        __size_of_TMR1_ReadTimer 001E             __size_of_key_locking 0024  
            routine_talk@time_up 0051        __end_of_SYSTEM_Initialize 13A6  
                        ??_putch 0042                  __CFG_PLLCFG$OFF 000000  
                     __pnvCOMRAM 0059               __size_of_receiving 0062  
               ?_TMR1_StartTimer 0041                          ?_printf 0043  
               __CFG_CANMX$PORTB 000000                          _REFOCON 000F9A  
                        _OSCCON2 000FD2                    _BBB_broadcast 0F1C  
                        _OSCTUNE 000F9B                          _SPBRGH1 000F7D  
                        _SSPCON1 000FC6                        ?_identify 0041  
                        _SSPSTAT 000FC7                 ?_TMR1_WriteTimer 0041  
               ??_SPI_Initialize 0041                  __CFG_PWRTEN$OFF 000000  
                        __Hparam 0000                          __Lparam 0000  
                      ?_transmit 0044                     __psmallconst 0F00  
                        __pcinit 1232                          __ramtop 0F00  
       TMR1_ReadTimer@readValLow 0048                          __ptext0 129A  
                        __ptext1 1042                          __ptext2 112C  
                        __ptext3 1318                          __ptext4 135A  
                        __ptext5 133C                          __ptext6 1376  
                        __ptext7 118E                          __ptext8 0F1C  
                        __ptext9 11E2                  __size_of_printf 002A  
      TMR1_ReadTimer@readValHigh 0047                        _T1CONbits 000FCD  
          _OSCILLATOR_Initialize 13D0                   ?_BBB_broadcast 0041  
             _EUSART1_Initialize 13A6         ??_PIN_MANAGER_Initialize 0041  
              __CFG_MSSPMSK$MSK7 000000                __end_of_receiving 118E  
              ?_SPI_Exchange8bit 0041       __size_of_SYSTEM_Initialize 0016  
                     ??_identify 0043             end_of_initialization 125E  
             ??_SPI_Exchange8bit 0041             SPI_Exchange8bit@data 0042  
            ?_EUSART1_Initialize 0041         __size_of_BBB_turn_player 001A  
                        printf@c 0047                          printf@f 0043  
                        postdec1 000FE5                          postinc0 000FEE  
                     ??_transmit 0046             ??_EUSART1_Initialize 0041  
                 _TMR1_ReadTimer 133C              EUSART1_Write@txData 0041  
                     _writeDummy 0057                    __pidataCOMRAM 1402  
         ?_OSCILLATOR_Initialize 0041           __end_of_TMR1_ReadTimer 135A  
                ??_BBB_broadcast 0044                   __end_of_printf 12EE  
            start_initialization 1232  __size_of_PIN_MANAGER_Initialize 002E  
                    putch@txData 0042            __end_of_EUSART1_Write 13EE  
              key_locking@master 0043                ??_BBB_turn_player 004D  
       __size_of_TMR1_Initialize 002A                         ??_printf 0045  
                  ??_key_locking 0047                  ?_TMR1_ReadTimer 0041  
                    __pbssCOMRAM 0001                    ?_routine_talk 004D  
              __size_of_identify 0050           _PIN_MANAGER_Initialize 126C  
              __size_of_transmit 0054                      __smallconst 0F00  
                       _BBB_INIT 0058                   ??_routine_talk 004F  
                       _BAUDCON1 000FA7         __size_of_TMR1_StartTimer 0004  
                      _readDummy 003E              __end_of_key_locking 133C  
        BBB_broadcast@TrueLenght 0047                   __size_of_putch 000A  
                      _receiving 112C                         _LATBbits 000F8A  
       __size_of_TMR1_WriteTimer 001C                         _PIR1bits 000F9E  
      __size_of_SPI_Exchange8bit 0014                ??_TMR1_Initialize 0041  
               __CFG_SOSCSEL$DIG 000000                      _INTCON2bits 000FF1  
                      copy_data0 1246                       ?_receiving 0043  
                       __Hrparam 0000                 key_locking@slave 0045  
                       __Lrparam 0000                     __Lsmallconst 0F00  
             __CFG_BOREN$SBORDIS 000000            TMR1_ReadTimer@readVal 0045  
        __size_of_SPI_Initialize 000A          ??_OSCILLATOR_Initialize 0041  
    __size_of_EUSART1_Initialize 0016                      _key_locking 1318  
                       __ptext10 13BC                         __ptext11 12C4  
                       __ptext20 13A6                         __ptext12 13EE  
                       __ptext13 13E2                       _T1GCONbits 000FAA  
                       __ptext14 1406                         __ptext15 1390  
                       __ptext16 12EE                         __ptext17 13F8  
                       __ptext18 126C                         __ptext19 13D0  
                       _identify 11E2                  _BBB_turn_player 1376  
                 _MY_BUFFER_SIZE 0055                ??_TMR1_StartTimer 0041  
                       _readData 0001                    __size_of_main 002A  
           __end_of_routine_talk 112C                 ??_TMR1_ReadTimer 0043  
                       _transmit 118E                ??_TMR1_WriteTimer 0043  
            __CFG_INTOSCSEL$HIGH 000000            __end_of_BBB_broadcast 1042  
         key_locking@master_lock 0048        SPI_Exchange8bit@dummyRead 0041  
                    ??_receiving 0045          ?_PIN_MANAGER_Initialize 0041  
                     _RCSTA1bits 000FAB                 _SPI_Exchange8bit 13BC  
                       printf@ap 0045               __CFG_WDTPS$1048576 000000  
         __size_of_EUSART1_Write 000C          __end_of_BBB_turn_player 1390  
                    _SSPCON1bits 000FC6   __end_of_PIN_MANAGER_Initialize 129A  
            __CFG_BORPWR$ZPBORMV 000000                  _TMR1_Initialize 12EE  
